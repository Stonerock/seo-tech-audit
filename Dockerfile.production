FROM --platform=linux/amd64 node:18-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./

# Remove ES module type to avoid conflicts
RUN echo "Removing ES module configurations..." && \
    sed -i '/.*"type".*:.*"module".*/d' package.json && \
    sed -i '/.*"module".*:.*/d' package.json && \
    echo "✅ Package.json ES module cleanup complete"

# Install production dependencies
RUN npm ci --only=production --silent

# Copy application code
COPY . .

# Final package.json cleanup after copy
RUN echo "Final package.json cleanup after copy..." && \
    sed -i '/.*"type".*:.*"module".*/d' package.json && \
    sed -i '/.*"module".*:.*/d' package.json && \
    echo "✅ Final package.json cleanup complete"

# Clean up deployment artifacts
RUN rm -f Dockerfile.* deploy-*.sh *.backup .gcloudignore server-probe.js

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/api/health || exit 1

# Start production application
CMD ["node", "server-production.js"]
