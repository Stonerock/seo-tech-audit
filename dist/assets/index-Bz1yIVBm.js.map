{"version":3,"file":"index-Bz1yIVBm.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/class-variance-authority/dist/index.mjs","../../src/lib/utils.ts","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../src/components/ui/card.tsx","../../node_modules/@radix-ui/react-context/dist/index.mjs","../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/@radix-ui/react-primitive/dist/index.mjs","../../node_modules/@radix-ui/react-progress/dist/index.mjs","../../src/components/ui/progress.tsx","../../src/components/audit/AttentionCards.tsx","../../src/components/audit/AIAnalysisSection.tsx","../../src/services/auditService.ts","../../src/components/audit/BatchAuditSection.tsx","../../src/components/audit/BusinessValueSection.tsx","../../src/components/ServerStatus.tsx","../../src/components/AuditDashboard.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\nimport type { ScoreStatus, AttentionScores } from '@/types/audit';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Get score status based on numeric score - preserve your logic\n */\nexport function getScoreStatus(score: number): ScoreStatus {\n  if (score >= 90) return 'excellent';\n  if (score >= 80) return 'good';\n  if (score >= 60) return 'warning';\n  return 'poor';\n}\n\n/**\n * Get score color class based on status\n */\nexport function getScoreColorClass(status: ScoreStatus): string {\n  const colors = {\n    excellent: 'text-emerald-400',\n    good: 'text-green-400',\n    warning: 'text-amber-400',\n    poor: 'text-red-400',\n  };\n  return colors[status];\n}\n\n/**\n * Calculate AI-era attention scores with focus on machine comprehension\n */\nexport function calculateAttentionScores(results: any): AttentionScores {\n  const seo = results?.tests?.seo?.score || 0;\n  const performance = results?.tests?.performance?.score || 0;\n  const accessibility = results?.tests?.accessibility?.score || 0;\n  // Use AI-readiness score if available, fallback to legacy schema score\n  const schema = results?.tests?.schema?.aiReadinessScore || results?.tests?.schema?.score || 0;\n  const files = calculateFilesScore(results?.tests?.files);\n  \n  // AI-era weighted calculation: Schema intelligence takes priority\n  // Schema (40%) + SEO (25%) + Performance (20%) + Accessibility (10%) + Files (5%)\n  const overall = Math.round(\n    (schema * 0.4 + seo * 0.25 + performance * 0.2 + accessibility * 0.1 + files * 0.05)\n  );\n\n  return {\n    overall,\n    seo,\n    performance,\n    accessibility,\n    schema,\n    files,\n  };\n}\n\n/**\n * Calculate files score - preserve your logic\n */\nfunction calculateFilesScore(files: any): number {\n  if (!files) return 0;\n  \n  let score = 0;\n  if (files.robots?.exists) score += 30;\n  if (files.sitemap?.exists) score += 40;\n  if (files.rss?.exists) score += 15;\n  if (files.llms?.exists) score += 15;\n  \n  return Math.min(score, 100);\n}\n\n/**\n * Format bytes - utility function\n */\nexport function formatBytes(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n}\n\n/**\n * Format duration - utility function\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) return `${ms}ms`;\n  const seconds = ms / 1000;\n  if (seconds < 60) return `${seconds.toFixed(1)}s`;\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}m ${remainingSeconds}s`;\n}\n\n/**\n * Truncate text - utility function\n */\nexport function truncateText(text: string, length = 100): string {\n  if (text.length <= length) return text;\n  return text.substring(0, length) + '...';\n}\n\n/**\n * Generate witty insights - preserve your personality\n */\nexport function getScoreInterpretation(score: number): string {\n  if (score >= 90) return 'exceptional';\n  if (score >= 80) return 'strong';\n  if (score >= 70) return 'adequate';\n  if (score >= 60) return 'concerning';\n  return 'requires immediate attention';\n}\n\n/**\n * Generate academic-style witty copy - your brand voice\n */\nexport function getWittyCopy(type: string, score: number): string {\n  const wittyResponses = {\n    seo: {\n      excellent: \"SEO game stronger than your morning coffee ‚òï\",\n      good: \"Google approves of your optimization efforts üëç\",\n      warning: \"Your SEO needs some love and attention üíï\",\n      poor: \"Google is giving you the silent treatment ü§ê\"\n    },\n    performance: {\n      excellent: \"Faster than a researcher finding typos in their own paper ‚ö°\",\n      good: \"Loading speed that won't test user patience ‚è±Ô∏è\",\n      warning: \"Users are questioning their life choices while waiting ü§î\",\n      poor: \"Slower than peer review process üêå\"\n    },\n    accessibility: {\n      excellent: \"More inclusive than a diverse research team üåü\",\n      good: \"Accessibility compliance looking solid üëå\",\n      warning: \"Some users might feel left out üòï\",\n      poor: \"Accessibility barriers higher than academic paywalls üöß\"\n    },\n    schema: {\n      excellent: \"AI-readiness level: PhD dissertation üéì\",\n      good: \"Schema markup that makes AI assistants happy ü§ñ\",\n      warning: \"Your structured data needs some structure üìä\",\n      poor: \"Machines are confused, humans are lost ü§∑\"\n    }\n  };\n\n  const status = getScoreStatus(score);\n  return wittyResponses[type as keyof typeof wittyResponses]?.[status] || \n         \"Analysis complete, results may vary ¬Ø\\\\_(„ÉÑ)_/¬Ø\";\n}\n\n/**\n * Debounce function for search inputs\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\n/**\n * Check if URL is valid\n */\nexport function isValidURL(string: string): boolean {\n  try {\n    new URL(string);\n    return true;\n  } catch {\n    return false;\n  }\n}","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        // Academic paper-inspired variants\n        research: \"bg-primary/10 text-primary border border-primary/20 hover:bg-primary/20 hover:border-primary/30\",\n        finding: \"bg-emerald-500/10 text-emerald-400 border border-emerald-500/20 hover:bg-emerald-500/20\",\n        warning: \"bg-amber-500/10 text-amber-400 border border-amber-500/20 hover:bg-amber-500/20\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n        // Academic sizing\n        academic: \"h-12 px-6 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          // Academic paper-inspired styling\n          \"academic-focus bg-card/50 border-border hover:border-border/60\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      // Academic paper-inspired card styling\n      \"research-card border-border/50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","// packages/react/context/src/create-context.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/progress.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n    }\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n    }\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n    return /* @__PURE__ */ jsx(ProgressProvider, { scope: __scopeProgress, value, max, children: /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": isNumber(value) ? value : void 0,\n        \"aria-valuetext\": valueLabel,\n        role: \"progressbar\",\n        \"data-state\": getProgressState(value, max),\n        \"data-value\": value ?? void 0,\n        \"data-max\": max,\n        ...progressProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": getProgressState(context.value, context.max),\n        \"data-value\": context.value ?? void 0,\n        \"data-max\": context.max,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport {\n  Indicator,\n  Progress,\n  ProgressIndicator,\n  Root,\n  createProgressScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> & {\n    status?: 'excellent' | 'good' | 'warning' | 'poor';\n  }\n>(({ className, value, status, ...props }, ref) => {\n  // Academic-style progress coloring\n  const getProgressColor = (status?: string) => {\n    switch (status) {\n      case 'excellent': return 'bg-emerald-500';\n      case 'good': return 'bg-green-500';\n      case 'warning': return 'bg-amber-500';\n      case 'poor': return 'bg-red-500';\n      default: return 'bg-primary';\n    }\n  };\n\n  return (\n    <ProgressPrimitive.Root\n      ref={ref}\n      className={cn(\n        \"relative h-2 w-full overflow-hidden rounded-full bg-secondary\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        className={cn(\n          \"h-full w-full flex-1 transition-all duration-1000 ease-out\",\n          getProgressColor(status)\n        )}\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n});\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }","import { TrendingUp, Zap, Eye, FileText, Search, Code } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { calculateAttentionScores, getScoreStatus, getWittyCopy } from '@/lib/utils';\nimport type { AuditResult } from '@/types/audit';\n\ninterface AttentionCardsProps {\n  results: AuditResult;\n}\n\nexport function AttentionCards({ results }: AttentionCardsProps) {\n  const scores = calculateAttentionScores(results);\n\n  const cards = [\n    {\n      title: 'SEO Foundation',\n      score: scores.seo,\n      icon: Search,\n      description: 'Search engine optimization compliance and best practices',\n      gradient: 'from-blue-500/10 to-blue-600/10',\n      borderColor: 'border-blue-500/20',\n    },\n    {\n      title: 'Performance Metrics',\n      score: scores.performance,\n      icon: Zap,\n      description: 'Loading speed, resource efficiency, and Core Web Vitals',\n      gradient: 'from-emerald-500/10 to-emerald-600/10',\n      borderColor: 'border-emerald-500/20',\n    },\n    {\n      title: 'Accessibility Standards',\n      score: scores.accessibility,\n      icon: Eye,\n      description: 'WCAG compliance and inclusive design principles',\n      gradient: 'from-purple-500/10 to-purple-600/10',\n      borderColor: 'border-purple-500/20',\n    },\n    {\n      title: 'Schema Markup',\n      score: scores.schema,\n      icon: Code,\n      description: 'Structured data for AI-powered search comprehension',\n      gradient: 'from-indigo-500/10 to-indigo-600/10',\n      borderColor: 'border-indigo-500/20',\n    },\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Overall Attention Score */}\n      <Card className=\"border-primary/30 shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl font-serif\">\n            <TrendingUp className=\"w-6 h-6 text-primary\" />\n            AI Comprehension Analysis\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            How well AI systems can understand and interpret your website's content and purpose\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"space-y-2\">\n              <div className=\"score-display\">{scores.overall}</div>\n              <div className=\"text-sm font-medium text-muted-foreground\">\n                AI Readiness Score\n              </div>\n            </div>\n            <div className=\"text-right space-y-1\">\n              <div className={`text-sm font-medium px-3 py-1 rounded-full border ${\n                getScoreStatus(scores.overall) === 'excellent' ? 'bg-emerald-50 text-emerald-700 border-emerald-200' :\n                getScoreStatus(scores.overall) === 'good' ? 'bg-green-50 text-green-700 border-green-200' :\n                getScoreStatus(scores.overall) === 'warning' ? 'bg-amber-50 text-amber-700 border-amber-200' :\n                'bg-red-50 text-red-700 border-red-200'\n              }`}>\n                {getScoreStatus(scores.overall).toUpperCase()}\n              </div>\n              <div className=\"text-xs text-muted-foreground font-mono\">\n                {results.executionTime}ms analysis\n              </div>\n            </div>\n          </div>\n          <Progress \n            value={scores.overall} \n            status={getScoreStatus(scores.overall)} \n            className=\"h-2 mb-4\"\n          />\n          <div className=\"paper-meta\">\n            <p className=\"text-sm italic text-muted-foreground\">\n              {getWittyCopy('seo', scores.overall)}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Individual Metric Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {cards.map((card) => {\n          const Icon = card.icon;\n          const status = getScoreStatus(card.score);\n          \n          return (\n            <Card \n              key={card.title} \n              className=\"metric-card hover:shadow-lg transition-all duration-200\"\n            >\n              <CardHeader className=\"pb-4\">\n                <CardTitle className=\"flex items-center gap-2 text-lg\">\n                  <Icon className=\"w-5 h-5\" />\n                  {card.title}\n                </CardTitle>\n                <p className=\"text-sm text-muted-foreground leading-relaxed\">\n                  {card.description}\n                </p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"text-3xl font-bold text-foreground\">{card.score}</div>\n                    <div className={`text-sm font-medium px-3 py-1 rounded-full ${\n                      status === 'excellent' ? 'bg-emerald-500/20 text-emerald-400' :\n                      status === 'good' ? 'bg-green-500/20 text-green-400' :\n                      status === 'warning' ? 'bg-amber-500/20 text-amber-400' :\n                      'bg-red-500/20 text-red-400'\n                    }`}>\n                      {status}\n                    </div>\n                  </div>\n                  \n                  <Progress value={card.score} status={status} className=\"h-2\" />\n                  \n                  {/* Show business type and AI-readiness info if this is the schema card */}\n                  {card.title === 'Schema Markup' && results.tests.schema && (\n                    <div className=\"mt-2 space-y-2\">\n                      {/* Business Type Detection */}\n                      {results.tests.schema.businessType && (\n                        <div className=\"space-y-1\">\n                          <p className=\"text-xs font-medium text-foreground\">Business Type:</p>\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"inline-block px-2 py-1 text-xs bg-blue-50 text-blue-700 rounded border border-blue-200 font-medium\">\n                              {results.tests.schema.businessType.detected}\n                            </span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              results.tests.schema.businessType.confidence === 'high' ? 'bg-green-100 text-green-600' :\n                              results.tests.schema.businessType.confidence === 'medium' ? 'bg-yellow-100 text-yellow-600' :\n                              'bg-gray-100 text-gray-600'\n                            }`}>\n                              {results.tests.schema.businessType.confidence} confidence\n                            </span>\n                            {results.tests.schema.businessType.scope === 'english-only' && (\n                              <span className=\"text-xs px-1.5 py-0.5 bg-orange-100 text-orange-600 rounded\" title=\"Detection based on English keywords\">\n                                üá¨üáß EN\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {/* Schema Types */}\n                      {results.tests.schema.types && results.tests.schema.types.length > 0 && (\n                        <div className=\"space-y-1\">\n                          <p className=\"text-xs font-medium text-foreground\">Schema Types ({results.tests.schema.types.length}):</p>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {results.tests.schema.types.slice(0, 3).map((type: string, index: number) => (\n                              <span \n                                key={index}\n                                className=\"inline-block px-1.5 py-0.5 text-xs bg-indigo-50 text-indigo-700 rounded border border-indigo-200\"\n                              >\n                                {type}\n                              </span>\n                            ))}\n                            {results.tests.schema.types.length > 3 && (\n                              <span className=\"text-xs text-muted-foreground font-mono\">\n                                +{results.tests.schema.types.length - 3}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  <p className=\"text-xs text-muted-foreground italic\">\n                    {getWittyCopy(card.title.toLowerCase().split(' ')[0], card.score)}\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Technical Details (Academic Paper Style) */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-lg border-b border-border pb-3\">\n            <FileText className=\"w-5 h-5\" />\n            Technical Analysis Summary\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"academic-prose\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Methodology */}\n            <div>\n              <h4 className=\"academic-subsection text-foreground font-medium\">Methodology</h4>\n              <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                <li>‚Ä¢ <strong className=\"text-foreground\">Mode:</strong> {results.mode} analysis</li>\n                <li>‚Ä¢ <strong className=\"text-foreground\">Execution time:</strong> {results.executionTime}ms</li>\n                <li>‚Ä¢ <strong className=\"text-foreground\">Timestamp:</strong> {new Date(results.timestamp).toLocaleString()}</li>\n                <li>‚Ä¢ <strong className=\"text-foreground\">Target:</strong> <code className=\"text-primary\">{results.url}</code></li>\n              </ul>\n            </div>\n\n            {/* Key Findings */}\n            <div>\n              <h4 className=\"academic-subsection text-foreground font-medium\">Key Findings</h4>\n              <div className=\"space-y-2 text-sm\">\n                {results.tests.seo && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">SEO Title Length:</span>\n                    <span className=\"font-mono\">{results.tests.seo.title?.length || 0} chars</span>\n                  </div>\n                )}\n                {results.tests.performance && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Response Time:</span>\n                    <span className=\"font-mono\">{results.tests.performance.responseTime}ms</span>\n                  </div>\n                )}\n                {results.tests.accessibility && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Accessibility Issues:</span>\n                    <span className=\"font-mono\">{results.tests.accessibility.issues?.length || 0}</span>\n                  </div>\n                )}\n                {results.tests.schema && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Schema Types:</span>\n                    <span className=\"font-mono\">{results.tests.schema.types?.length || 0}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Academic-style conclusion */}\n          <div className=\"mt-6 pt-6 border-t border-border\">\n            <p className=\"text-sm text-muted-foreground italic leading-relaxed\">\n              <strong className=\"text-foreground\">AI Comprehension Assessment:</strong> Your website achieves an AI readiness score of{' '}\n              <span className=\"text-foreground font-semibold\">{scores.overall}/100</span>, indicating{' '}\n              <span className=\"text-primary\">{getScoreStatus(scores.overall)}</span> machine comprehension capability.\n              This reflects how effectively AI systems can understand your business, content, and purpose.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","import { Brain, Search, FileText, Globe, Shield } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { getScoreStatus } from '@/lib/utils';\nimport type { AuditResult } from '@/types/audit';\n\ninterface AIAnalysisSectionProps {\n  results: AuditResult;\n}\n\nexport function AIAnalysisSection({ results }: AIAnalysisSectionProps) {\n  // Calculate AI readiness score based on multiple factors\n  const calculateAIReadiness = () => {\n    let score = 0;\n    let maxScore = 0;\n\n    // Schema markup (40 points)\n    if (results.tests.schema) {\n      maxScore += 40;\n      score += Math.min(results.tests.schema.score * 0.4, 40);\n    }\n\n    // SEO structure (30 points)\n    if (results.tests.seo) {\n      maxScore += 30;\n      if (results.tests.seo.title && results.tests.seo.description) score += 15;\n      if (results.tests.seo.h1Count === 1) score += 10;\n      if (results.tests.seo.h2Count > 0) score += 5;\n    }\n\n    // Technical files (20 points)\n    if (results.tests.files) {\n      maxScore += 20;\n      if (results.tests.files.robots.exists) score += 10;\n      if (results.tests.files.sitemap.exists) score += 10;\n    }\n\n    // Accessibility (10 points)\n    if (results.tests.accessibility) {\n      maxScore += 10;\n      if (results.tests.accessibility.hasLang) score += 5;\n      if (results.tests.accessibility.imagesWithoutAlt === 0) score += 5;\n    }\n\n    return maxScore > 0 ? Math.round((score / maxScore) * 100) : 0;\n  };\n\n  const aiReadinessScore = calculateAIReadiness();\n  const aiStatus = getScoreStatus(aiReadinessScore);\n\n  const aiFactors = [\n    {\n      title: 'Structured Data',\n      icon: FileText,\n      score: results.tests.schema?.score || 0,\n      description: 'JSON-LD and microdata for AI comprehension',\n      findings: results.tests.schema ? [\n        `${results.tests.schema.totalSchemas} schema types detected`,\n        `${results.tests.schema.jsonLdCount} JSON-LD scripts found`,\n        results.tests.schema.types.length > 0 ? `Types: ${results.tests.schema.types.join(', ')}` : 'No structured data found'\n      ] : ['Schema analysis unavailable']\n    },\n    {\n      title: 'Content Structure',\n      icon: Search,\n      score: results.tests.seo ? Math.min(100, (results.tests.seo.h1Count === 1 ? 50 : 0) + (results.tests.seo.h2Count * 5)) : 0,\n      description: 'Hierarchical content organization for AI parsing',\n      findings: results.tests.seo ? [\n        `${results.tests.seo.h1Count} H1 heading${results.tests.seo.h1Count !== 1 ? 's' : ''} (optimal: 1)`,\n        `${results.tests.seo.h2Count} H2 headings for section structure`,\n        `Title: ${results.tests.seo.title?.length || 0} characters`\n      ] : ['Content analysis unavailable']\n    },\n    {\n      title: 'Crawlability',\n      icon: Globe,\n      score: results.tests.files ? \n        (results.tests.files.robots.exists ? 50 : 0) + \n        (results.tests.files.sitemap.exists ? 50 : 0) : 0,\n      description: 'Technical foundations for AI crawler access',\n      findings: results.tests.files ? [\n        `robots.txt: ${results.tests.files.robots.exists ? '‚úì Present' : '‚úó Missing'}`,\n        `sitemap.xml: ${results.tests.files.sitemap.exists ? '‚úì Present' : '‚úó Missing'}`,\n        `llms.txt: ${results.tests.files.llms?.exists ? '‚úì Present' : '‚úó Missing (optional)'}`\n      ] : ['File analysis unavailable']\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overall AI Readiness Score */}\n      <Card className=\"border-primary/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <Brain className=\"w-6 h-6 text-primary\" />\n            AI Readiness Assessment\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Evaluation of content structure and technical implementation for AI search optimization\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"space-y-1\">\n              <div className=\"score-display\">{aiReadinessScore}</div>\n              <div className=\"text-sm text-muted-foreground\">\n                AI Optimization Index\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className={`text-sm font-medium px-3 py-1 rounded-full ${\n                aiStatus === 'excellent' ? 'bg-emerald-100 text-emerald-700' :\n                aiStatus === 'good' ? 'bg-green-100 text-green-700' :\n                aiStatus === 'warning' ? 'bg-amber-100 text-amber-700' :\n                'bg-red-100 text-red-700'\n              }`}>\n                {aiStatus.toUpperCase()}\n              </div>\n            </div>\n          </div>\n          <Progress value={aiReadinessScore} status={aiStatus} className=\"h-3 mb-3\" />\n          <div className=\"paper-meta\">\n            <p className=\"text-sm font-medium mb-1\">Methodology</p>\n            <p className=\"text-xs text-muted-foreground\">\n              Composite score based on structured data implementation (40%), \n              content hierarchy (30%), crawlability signals (20%), \n              and accessibility compliance (10%).\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Detailed AI Factors */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {aiFactors.map((factor) => {\n          const Icon = factor.icon;\n          const status = getScoreStatus(factor.score);\n          \n          return (\n            <Card key={factor.title} className=\"metric-card\">\n              <CardHeader className=\"pb-4\">\n                <CardTitle className=\"flex items-center gap-2 text-base\">\n                  <Icon className=\"w-4 h-4 text-primary\" />\n                  {factor.title}\n                </CardTitle>\n                <p className=\"text-xs text-muted-foreground leading-relaxed\">\n                  {factor.description}\n                </p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"font-mono text-2xl font-bold text-primary\">{factor.score}</div>\n                    <div className={`text-xs font-medium px-2 py-1 rounded ${\n                      status === 'excellent' ? 'bg-emerald-100 text-emerald-700' :\n                      status === 'good' ? 'bg-green-100 text-green-700' :\n                      status === 'warning' ? 'bg-amber-100 text-amber-700' :\n                      'bg-red-100 text-red-700'\n                    }`}>\n                      {status}\n                    </div>\n                  </div>\n                  \n                  <Progress value={factor.score} status={status} className=\"h-1.5\" />\n                  \n                  <div className=\"space-y-1\">\n                    {factor.findings.map((finding, idx) => (\n                      <div key={idx} className=\"text-xs text-muted-foreground font-mono\">\n                        {finding}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* AI Analysis Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-lg border-b border-border pb-3 mb-0\">\n            <Shield className=\"w-5 h-5\" />\n            AI Optimization Recommendations\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-4\">\n          <div className=\"prose prose-sm max-w-none\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h4 className=\"font-semibold text-sm text-foreground mb-2\">Priority Actions</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  {aiReadinessScore < 70 && results.tests.schema?.totalSchemas === 0 && (\n                    <li>‚Ä¢ Implement JSON-LD structured data for content type detection</li>\n                  )}\n                  {results.tests.seo?.h1Count !== 1 && (\n                    <li>‚Ä¢ Optimize heading hierarchy (exactly one H1, logical H2-H6 structure)</li>\n                  )}\n                  {!results.tests.files?.robots?.exists && (\n                    <li>‚Ä¢ Create robots.txt file to guide AI crawler behavior</li>\n                  )}\n                  {!results.tests.files?.sitemap?.exists && (\n                    <li>‚Ä¢ Generate XML sitemap for comprehensive content indexing</li>\n                  )}\n                  {(results.tests.accessibility?.imagesWithoutAlt || 0) > 0 && (\n                    <li>‚Ä¢ Add descriptive alt text to {results.tests.accessibility?.imagesWithoutAlt || 0} images</li>\n                  )}\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-sm text-foreground mb-2\">Technical Implementation</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>‚Ä¢ Schema.org markup for enhanced entity recognition</li>\n                  <li>‚Ä¢ Semantic HTML5 elements for content context</li>\n                  <li>‚Ä¢ Clear information architecture with logical navigation</li>\n                  <li>‚Ä¢ Comprehensive meta descriptions for AI summarization</li>\n                  <li>‚Ä¢ LLMS.txt file for AI training preferences (optional)</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","import type { AuditResult, AuditOptions } from '@/types/audit';\n\nclass APIError extends Error {\n  constructor(message: string, public status: number) {\n    super(message);\n    this.name = 'APIError';\n  }\n}\n\nexport class AuditService {\n  private baseURL: string;\n  private cache = new Map<string, { data: AuditResult; timestamp: number }>();\n  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\n  constructor() {\n    // Environment-based URL configuration (no more hardcoded URLs!)\n    this.baseURL = import.meta.env.VITE_BACKEND_URL || \n      (import.meta.env.MODE === 'development' \n        ? 'http://localhost:8080'\n        : 'https://seo-audit-backend-458683085682.us-central1.run.app'\n      );\n  }\n\n  /**\n   * Perform audit - preserves your existing API call logic\n   */\n  async performAudit(url: string, options: AuditOptions = {}): Promise<AuditResult> {\n    const cacheKey = `audit_${url}_${JSON.stringify(options)}`;\n    \n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.CACHE_DURATION) {\n      return cached.data;\n    }\n\n    try {\n      const response = await fetch(`${this.baseURL}/api/audit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, options }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`,\n          response.status\n        );\n      }\n\n      const result: AuditResult = await response.json();\n      \n      // Cache the result\n      this.cache.set(cacheKey, { data: result, timestamp: Date.now() });\n      \n      return result;\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      \n      // Handle network errors\n      throw new APIError(\n        error instanceof Error ? error.message : 'Network error occurred',\n        0\n      );\n    }\n  }\n\n  /**\n   * Enhanced audit with heavy dependencies - preserve your lazy loading logic\n   */\n  async performEnhancedAudit(url: string, options: AuditOptions = {}): Promise<AuditResult> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/audit/enhanced`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, options }),\n      });\n\n      if (!response.ok) {\n        // Fallback to lightweight audit if enhanced fails\n        console.warn('Enhanced audit failed, falling back to lightweight mode');\n        return this.performAudit(url, options);\n      }\n\n      return await response.json();\n    } catch (error) {\n      // Graceful fallback - preserve your error handling approach\n      console.warn('Enhanced audit error, falling back to lightweight mode:', error);\n      return this.performAudit(url, options);\n    }\n  }\n\n  /**\n   * Sitemap discovery - find URLs in sitemap\n   */\n  async discoverSitemapUrls(url: string, maxUrls = 20): Promise<{\n    success: boolean;\n    baseUrl: string;\n    sitemaps: Array<{ url: string; status: string; type?: string }>;\n    discoveredUrls: number;\n    urls: string[];\n    maxUrls: number;\n    executionTime: number;\n    timestamp: string;\n    nextStep: string;\n  }> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/sitemap-audit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, maxUrls, mode: 'discover' }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.error || `Sitemap discovery failed: ${response.statusText}`,\n          response.status\n        );\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      throw new APIError('Failed to discover sitemap URLs', 0);\n    }\n  }\n\n  /**\n   * Batch audit - audit multiple URLs from sitemap\n   */\n  async performBatchAudit(url: string, maxUrls = 20): Promise<{\n    success: boolean;\n    baseUrl: string;\n    sitemaps: Array<{ url: string; status: string; type?: string }>;\n    totalUrls: number;\n    maxUrls: number;\n    results: Array<{\n      url: string;\n      success: boolean;\n      executionTime: number;\n      scores?: {\n        seo: number;\n        performance: number;\n        accessibility: number;\n        overall: number;\n      };\n      keyFindings?: string[];\n      error?: string;\n    }>;\n    summary: {\n      completed: number;\n      failed: number;\n      avgScore: number;\n      totalExecutionTime: number;\n    };\n    timestamp: string;\n    executionTime: number;\n  }> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/sitemap-audit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, maxUrls, mode: 'batch' }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.error || `Batch audit failed: ${response.statusText}`,\n          response.status\n        );\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      throw new APIError('Failed to perform batch audit', 0);\n    }\n  }\n\n  /**\n   * Clear cache - preserve your cache management\n   */\n  async clearCache(): Promise<void> {\n    try {\n      // Clear local cache\n      this.cache.clear();\n      \n      // Clear server cache\n      const response = await fetch(`${this.baseURL}/api/cache/clear`, {\n        method: 'POST',\n      });\n\n      if (!response.ok) {\n        throw new APIError('Failed to clear server cache', response.status);\n      }\n    } catch (error) {\n      console.warn('Cache clear warning:', error);\n      // Don't throw - cache clearing shouldn't break the app\n    }\n  }\n\n  /**\n   * Generate LLMS.txt - preserve your existing logic\n   */\n  async generateLLMSTxt(url: string): Promise<{\n    content: string;\n    url: string;\n    instructions: string;\n  }> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/llms/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url }),\n      });\n\n      if (!response.ok) {\n        throw new APIError('LLMS.txt generation failed', response.status);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      throw new APIError('Failed to generate LLMS.txt', 0);\n    }\n  }\n\n  /**\n   * Check server health - preserve your health check logic\n   */\n  async checkHealth(): Promise<{\n    status: string;\n    timestamp: string;\n    uptime: number;\n    mode: string;\n    memory: {\n      used: string;\n      total: string;\n    };\n  }> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/health`);\n      \n      if (!response.ok) {\n        throw new APIError('Health check failed', response.status);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      throw new APIError('Unable to reach server', 0);\n    }\n  }\n\n  /**\n   * Get cache size for debugging\n   */\n  getCacheSize(): number {\n    return this.cache.size;\n  }\n\n  /**\n   * Get current backend URL for debugging\n   */\n  getBackendURL(): string {\n    return this.baseURL;\n  }\n}\n\n// Export singleton instance\nexport const auditService = new AuditService();","import { useState } from 'react';\nimport { Search, Loader2, AlertCircle, CheckCircle2, MapPin, BarChart3, Globe, Clock } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { auditService } from '@/services/auditService';\nimport { isValidURL } from '@/lib/utils';\n\ninterface BatchAuditSectionProps {\n  onBatchComplete?: (results: any) => void;\n}\n\nexport function BatchAuditSection({ onBatchComplete }: BatchAuditSectionProps) {\n  const [url, setUrl] = useState('');\n  const [maxUrls, setMaxUrls] = useState(20);\n  const [isDiscovering, setIsDiscovering] = useState(false);\n  const [isBatchRunning, setIsBatchRunning] = useState(false);\n  const [discoveryResults, setDiscoveryResults] = useState<any>(null);\n  const [batchResults, setBatchResults] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [urlError, setUrlError] = useState<string | null>(null);\n\n  // URL validation\n  const isUrlValid = url && isValidURL(url) && !urlError;\n\n  const handleUrlChange = (value: string) => {\n    setUrl(value);\n    if (value && !isValidURL(value)) {\n      setUrlError('Please enter a valid URL (e.g., https://example.com)');\n    } else {\n      setUrlError(null);\n    }\n  };\n\n  const handleDiscoverSitemap = async () => {\n    if (!isUrlValid || isDiscovering) return;\n\n    setIsDiscovering(true);\n    setError(null);\n    setDiscoveryResults(null);\n    setBatchResults(null);\n\n    try {\n      const results = await auditService.discoverSitemapUrls(url, maxUrls);\n      setDiscoveryResults(results);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to discover sitemap URLs';\n      setError(errorMessage);\n    } finally {\n      setIsDiscovering(false);\n    }\n  };\n\n  const handleBatchAudit = async () => {\n    if (!isUrlValid || isBatchRunning) return;\n\n    setIsBatchRunning(true);\n    setError(null);\n    setBatchResults(null);\n\n    try {\n      const results = await auditService.performBatchAudit(url, maxUrls);\n      setBatchResults(results);\n      onBatchComplete?.(results);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Batch audit failed';\n      setError(errorMessage);\n    } finally {\n      setIsBatchRunning(false);\n    }\n  };\n\n  const getScoreColor = (score: number) => {\n    if (score >= 90) return 'text-emerald-600';\n    if (score >= 70) return 'text-green-600';\n    if (score >= 50) return 'text-amber-600';\n    return 'text-red-600';\n  };\n\n  const getScoreStatus = (score: number) => {\n    if (score >= 90) return 'excellent';\n    if (score >= 70) return 'good';\n    if (score >= 50) return 'warning';\n    return 'poor';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Batch Audit Input */}\n      <Card className=\"border-primary/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <MapPin className=\"w-6 h-6 text-primary\" />\n            Sitemap-Based Batch Analysis\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Discover and audit multiple pages from your website's sitemap for comprehensive analysis\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* URL Input */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"md:col-span-2 space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">\n                Website URL\n              </label>\n              <Input\n                type=\"url\"\n                placeholder=\"https://example.com\"\n                value={url}\n                onChange={(e) => handleUrlChange(e.target.value)}\n                className={urlError ? 'border-destructive' : ''}\n              />\n              {urlError && (\n                <p className=\"text-sm text-destructive flex items-center gap-1\">\n                  <AlertCircle className=\"w-4 h-4\" />\n                  {urlError}\n                </p>\n              )}\n            </div>\n\n            <div className=\"space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">\n                Max Pages (1-50)\n              </label>\n              <Input\n                type=\"number\"\n                min=\"1\"\n                max=\"50\"\n                value={maxUrls}\n                onChange={(e) => setMaxUrls(Math.min(50, Math.max(1, parseInt(e.target.value) || 20)))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex flex-col sm:flex-row gap-3\">\n            <Button\n              onClick={handleDiscoverSitemap}\n              disabled={!isUrlValid || isDiscovering}\n              variant=\"outline\"\n              className=\"flex-1\"\n            >\n              {isDiscovering ? (\n                <>\n                  <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Discovering...\n                </>\n              ) : (\n                <>\n                  <Search className=\"w-4 h-4 mr-2\" />\n                  Discover Sitemap URLs\n                </>\n              )}\n            </Button>\n\n            <Button\n              onClick={handleBatchAudit}\n              disabled={!isUrlValid || isBatchRunning}\n              size=\"academic\"\n              className=\"flex-1\"\n            >\n              {isBatchRunning ? (\n                <>\n                  <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Running Batch Analysis...\n                </>\n              ) : (\n                <>\n                  <BarChart3 className=\"w-4 h-4 mr-2\" />\n                  Start Batch Audit\n                </>\n              )}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Error Display */}\n      {error && (\n        <Card className=\"border-destructive/20 bg-destructive/5\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2 text-destructive\">\n              <AlertCircle className=\"w-5 h-5\" />\n              <div>\n                <h3 className=\"font-semibold\">Batch Analysis Failed</h3>\n                <p className=\"text-sm mt-1\">{error}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Discovery Results */}\n      {discoveryResults && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg\">\n              <Globe className=\"w-5 h-5\" />\n              Sitemap Discovery Results\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{discoveryResults.discoveredUrls}</div>\n                <div className=\"metric-label\">URLs Discovered</div>\n              </div>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{discoveryResults.sitemaps.filter((s: any) => s.status === 'found').length}</div>\n                <div className=\"metric-label\">Sitemaps Found</div>\n              </div>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{discoveryResults.executionTime}ms</div>\n                <div className=\"metric-label\">Discovery Time</div>\n              </div>\n            </div>\n\n            {/* Sitemap Status */}\n            <div className=\"space-y-2\">\n              <h4 className=\"font-semibold text-sm\">Discovered Sitemaps</h4>\n              {discoveryResults.sitemaps.map((sitemap: any, index: number) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-muted/50 rounded\">\n                  <span className=\"font-mono text-sm\">{sitemap.url}</span>\n                  <div className=\"flex items-center gap-2\">\n                    {sitemap.status === 'found' ? (\n                      <>\n                        <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />\n                        <span className=\"text-xs bg-emerald-100 text-emerald-700 px-2 py-1 rounded\">\n                          {sitemap.type || 'found'}\n                        </span>\n                      </>\n                    ) : (\n                      <>\n                        <AlertCircle className=\"w-4 h-4 text-red-400\" />\n                        <span className=\"text-xs bg-red-100 text-red-700 px-2 py-1 rounded\">\n                          not found\n                        </span>\n                      </>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {discoveryResults.urls.length > 0 && (\n              <div className=\"mt-6 p-4 bg-primary/5 rounded-lg\">\n                <p className=\"text-sm text-muted-foreground mb-2\">\n                  Ready to audit {discoveryResults.urls.length} pages. Click \"Start Batch Audit\" to analyze all discovered URLs.\n                </p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Batch Results */}\n      {batchResults && (\n        <div className=\"space-y-6\">\n          {/* Summary Card */}\n          <Card className=\"border-primary/30\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-xl\">\n                <BarChart3 className=\"w-6 h-6 text-primary\" />\n                Batch Audit Summary\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"metric-display\">\n                  <div className=\"metric-value\">{batchResults.summary.completed}</div>\n                  <div className=\"metric-label\">Completed</div>\n                </div>\n                <div className=\"metric-display\">\n                  <div className=\"metric-value\">{batchResults.summary.failed}</div>\n                  <div className=\"metric-label\">Failed</div>\n                </div>\n                <div className=\"metric-display\">\n                  <div className={`metric-value ${getScoreColor(batchResults.summary.avgScore)}`}>\n                    {batchResults.summary.avgScore}\n                  </div>\n                  <div className=\"metric-label\">Avg Score</div>\n                </div>\n                <div className=\"metric-display\">\n                  <div className=\"metric-value\">{Math.round(batchResults.executionTime / 1000)}s</div>\n                  <div className=\"metric-label\">Total Time</div>\n                </div>\n              </div>\n\n              <Progress \n                value={batchResults.summary.avgScore} \n                status={getScoreStatus(batchResults.summary.avgScore)} \n                className=\"h-3 mb-4\" \n              />\n\n              <div className=\"paper-meta\">\n                <p className=\"text-sm font-medium mb-1\">Analysis Overview</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Analyzed {batchResults.totalUrls} pages from {batchResults.baseUrl} \n                  with an average optimization score of {batchResults.summary.avgScore}/100\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Individual Results */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-lg\">\n                <Clock className=\"w-5 h-5\" />\n                Individual Page Results\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3 max-h-96 overflow-y-auto academic-scrollbar\">\n                {batchResults.results.map((result: any, index: number) => (\n                  <div key={index} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                    <div className=\"flex-1 mr-4\">\n                      <div className=\"font-mono text-sm text-primary mb-1\">\n                        {result.url.replace(batchResults.baseUrl, '')}\n                      </div>\n                      {result.success ? (\n                        <div className=\"flex items-center gap-3 text-xs\">\n                          <span className={`font-bold ${getScoreColor(result.scores?.overall || 0)}`}>\n                            Score: {result.scores?.overall || 0}\n                          </span>\n                          <span className=\"text-muted-foreground\">\n                            {result.executionTime}ms\n                          </span>\n                          {result.keyFindings && result.keyFindings.length > 0 && (\n                            <span className=\"text-amber-600\">\n                              {result.keyFindings.length} issues\n                            </span>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"text-xs text-destructive\">\n                          Error: {result.error}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"text-right\">\n                      {result.success ? (\n                        <div className=\"flex items-center gap-2\">\n                          <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />\n                          <div className=\"text-xs space-y-1\">\n                            {result.scores && (\n                              <>\n                                <div>SEO: {result.scores.seo}</div>\n                                <div>Perf: {result.scores.performance}</div>\n                                <div>A11y: {result.scores.accessibility}</div>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      ) : (\n                        <AlertCircle className=\"w-4 h-4 text-destructive\" />\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Target, TrendingUp, Brain, Lightbulb, AlertTriangle, CheckCircle2, ArrowRight, Zap } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport type { AuditResult } from '@/types/audit';\nimport { getScoreStatus } from '@/lib/utils';\n\ninterface BusinessValueSectionProps {\n  results: AuditResult;\n}\n\nexport function BusinessValueSection({ results }: BusinessValueSectionProps) {\n  const [showImplementationGuide, setShowImplementationGuide] = useState(false);\n\n  // Calculate AI readiness impact on business\n  const calculateBusinessImpact = () => {\n    const issues = [];\n    const opportunities = [];\n    const quickWins = [];\n    \n    // Schema markup analysis for business impact\n    if (!results.tests.schema || results.tests.schema.totalSchemas === 0) {\n      issues.push({\n        type: 'critical',\n        area: 'AI Visibility',\n        issue: 'Your website is invisible to AI search engines like ChatGPT, Claude, and Google AI Overviews',\n        impact: 'Missing out on AI-driven traffic and customer discovery',\n        solution: 'Add structured data to help AI understand your business',\n        effort: 'Medium'\n      });\n      quickWins.push({\n        action: 'Implement basic Organization schema',\n        benefit: 'AI tools can identify and describe your business',\n        timeframe: '1-2 hours'\n      });\n    } else if (results.tests.schema.types.length < 3) {\n      opportunities.push({\n        area: 'AI Understanding',\n        current: `AI sees ${results.tests.schema.types.length} content type(s)`,\n        opportunity: 'Add more schema types to improve AI comprehension',\n        benefit: 'Better representation in AI search results'\n      });\n    }\n\n    // SEO structure for AI parsing\n    if (results.tests.seo) {\n      if (results.tests.seo.h1Count !== 1) {\n        issues.push({\n          type: 'warning',\n          area: 'Content Structure', \n          issue: `${results.tests.seo.h1Count} H1 headings found (should be exactly 1)`,\n          impact: 'AI tools struggle to understand page topic and hierarchy',\n          solution: 'Use one clear H1 that describes the main page topic',\n          effort: 'Easy'\n        });\n        quickWins.push({\n          action: 'Fix heading hierarchy (one H1, logical H2-H6)',\n          benefit: 'AI can better extract and summarize your content',\n          timeframe: '30 minutes'\n        });\n      }\n\n      if (!results.tests.seo.description || results.tests.seo.description.length < 100) {\n        issues.push({\n          type: 'warning',\n          area: 'AI Summarization',\n          issue: 'Missing or short meta description',\n          impact: 'AI tools lack context for accurate content summarization',\n          solution: 'Write descriptive meta descriptions (120-160 characters)',\n          effort: 'Easy'\n        });\n      }\n    }\n\n    // Technical foundations\n    if (results.tests.files) {\n      if (!results.tests.files.sitemap?.exists) {\n        issues.push({\n          type: 'warning',\n          area: 'AI Crawling',\n          issue: 'No sitemap.xml found',\n          impact: 'AI crawlers may miss important pages on your site',\n          solution: 'Create an XML sitemap listing all important pages',\n          effort: 'Easy'\n        });\n      }\n\n      if (!results.tests.files.robots?.exists) {\n        quickWins.push({\n          action: 'Add robots.txt file',\n          benefit: 'Guide AI crawlers to your most important content',\n          timeframe: '15 minutes'\n        });\n      }\n    }\n\n    // Performance impact on AI indexing\n    if (results.tests.performance && results.tests.performance.responseTime > 3000) {\n      issues.push({\n        type: 'warning',\n        area: 'AI Indexing',\n        issue: `Slow loading time (${results.tests.performance.responseTime}ms)`,\n        impact: 'AI crawlers may timeout or skip slow pages',\n        solution: 'Optimize images, reduce server response time',\n        effort: 'Medium'\n      });\n    }\n\n    return { issues, opportunities, quickWins };\n  };\n\n  const businessImpact = calculateBusinessImpact();\n  const overallScore = calculateOverallAIReadiness();\n\n  function calculateOverallAIReadiness() {\n    let score = 0;\n\n    // Schema data (40% weight)\n    const schemaScore = (results.tests.schema?.totalSchemas || 0) > 0 ? \n      Math.min(40, (results.tests.schema?.totalSchemas || 0) * 15) : 0;\n    score += schemaScore;\n\n    // Content structure (30% weight)  \n    const seoScore = results.tests.seo ? \n      (results.tests.seo.title ? 10 : 0) +\n      (results.tests.seo.description ? 10 : 0) +\n      (results.tests.seo.h1Count === 1 ? 10 : 0) : 0;\n    score += seoScore;\n\n    // Technical foundations (20% weight)\n    const techScore = results.tests.files ?\n      (results.tests.files.sitemap?.exists ? 10 : 0) +\n      (results.tests.files.robots?.exists ? 10 : 0) : 0;\n    score += techScore;\n\n    // Performance (10% weight)\n    const responseTime = results.tests.performance?.responseTime || 5000;\n    const perfScore = responseTime < 2000 ? 10 : responseTime < 4000 ? 5 : 0;\n    score += perfScore;\n\n    return Math.round(score);\n  }\n\n  const getImpactColor = (type: string) => {\n    return type === 'critical' ? 'text-red-600' : 'text-amber-600';\n  };\n\n  const getImpactBg = (type: string) => {\n    return type === 'critical' ? 'bg-red-50 border-red-200' : 'bg-amber-50 border-amber-200';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* AI Readiness Score for Business */}\n      <Card className=\"border-primary/30\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <Brain className=\"w-6 h-6 text-primary\" />\n            AI Search Readiness Report\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            How well your website works with AI tools like ChatGPT, Claude, Google AI Overviews, and AI-powered search\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <div className=\"text-center\">\n              <div className={`text-4xl font-bold mb-2 ${getScoreStatus(overallScore) === 'excellent' ? 'text-emerald-600' :\n                getScoreStatus(overallScore) === 'good' ? 'text-green-600' :\n                getScoreStatus(overallScore) === 'warning' ? 'text-amber-600' : 'text-red-600'}`}>\n                {overallScore}%\n              </div>\n              <div className=\"text-sm text-muted-foreground font-medium\">AI Readiness Score</div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"text-4xl font-bold mb-2 text-primary\">\n                {businessImpact.issues.filter(i => i.type === 'critical').length}\n              </div>\n              <div className=\"text-sm text-muted-foreground font-medium\">Critical Issues</div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"text-4xl font-bold mb-2 text-emerald-600\">\n                {businessImpact.quickWins.length}\n              </div>\n              <div className=\"text-sm text-muted-foreground font-medium\">Quick Wins</div>\n            </div>\n          </div>\n\n          <div className=\"paper-meta\">\n            <p className=\"text-sm font-medium mb-1\">What This Means for Your Business</p>\n            <p className=\"text-xs text-foreground\">\n              {overallScore >= 80 ? \n                \"Your website is well-optimized for AI search engines. Customers can easily discover your business through AI tools.\" :\n                overallScore >= 60 ?\n                \"Your website has good AI compatibility, but improvements could increase your visibility in AI search results.\" :\n                overallScore >= 40 ?\n                \"Your website needs significant improvements to be discovered by AI search engines and tools.\" :\n                \"Your website is largely invisible to AI search engines. You're missing potential customers who use AI tools to find businesses.\"\n              }\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Critical Issues */}\n      {businessImpact.issues.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <AlertTriangle className=\"w-5 h-5 text-amber-500\" />\n              Issues Affecting Your AI Visibility\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {businessImpact.issues.map((issue, index) => (\n              <div key={index} className={`p-4 rounded-lg border ${getImpactBg(issue.type)}`}>\n                <div className=\"flex items-start gap-3\">\n                  <AlertTriangle className={`w-5 h-5 mt-0.5 ${getImpactColor(issue.type)}`} />\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-semibold text-foreground mb-1\">{issue.area}: {issue.issue}</h4>\n                    <p className=\"text-sm text-muted-foreground mb-2\">{issue.impact}</p>\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"text-sm font-medium text-foreground\">{issue.solution}</p>\n                      <span className={`px-2 py-1 text-xs rounded ${\n                        issue.effort === 'Easy' ? 'bg-green-100 text-green-700' :\n                        issue.effort === 'Medium' ? 'bg-amber-100 text-amber-700' :\n                        'bg-red-100 text-red-700'\n                      }`}>\n                        {issue.effort}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Quick Wins */}\n      {businessImpact.quickWins.length > 0 && (\n        <Card className=\"border-emerald-200 bg-emerald-50/50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <Zap className=\"w-5 h-5 text-emerald-600\" />\n              Quick Wins to Improve AI Visibility\n            </CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              Easy improvements that will help AI tools better understand and promote your business\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {businessImpact.quickWins.map((win, index) => (\n                <div key={index} className=\"flex items-start gap-3 p-3 bg-white rounded-lg border border-emerald-200\">\n                  <CheckCircle2 className=\"w-5 h-5 text-emerald-600 mt-0.5\" />\n                  <div>\n                    <h4 className=\"font-medium text-foreground mb-1\">{win.action}</h4>\n                    <p className=\"text-sm text-muted-foreground mb-2\">{win.benefit}</p>\n                    <span className=\"text-xs bg-emerald-100 text-emerald-700 px-2 py-1 rounded\">\n                      {win.timeframe}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Business Opportunities */}\n      {businessImpact.opportunities.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              Opportunities for Growth\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {businessImpact.opportunities.map((opp, index) => (\n              <div key={index} className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                <Lightbulb className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                <div>\n                  <h4 className=\"font-medium text-foreground\">{opp.area}</h4>\n                  <p className=\"text-sm text-muted-foreground mt-1\">{opp.current}</p>\n                  <p className=\"text-sm font-medium text-foreground mt-1\">{opp.opportunity}</p>\n                  <p className=\"text-xs text-blue-700 mt-1\">{opp.benefit}</p>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Implementation Guide Toggle */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between text-lg text-foreground\">\n            <div className=\"flex items-center gap-2\">\n              <Target className=\"w-5 h-5\" />\n              Implementation Guide\n            </div>\n            <Button \n              variant=\"outline\" \n              size=\"sm\"\n              onClick={() => setShowImplementationGuide(!showImplementationGuide)}\n            >\n              {showImplementationGuide ? 'Hide Guide' : 'Show Implementation Steps'}\n              <ArrowRight className=\"w-4 h-4 ml-2\" />\n            </Button>\n          </CardTitle>\n        </CardHeader>\n        {showImplementationGuide && (\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"p-4 bg-primary/5 rounded-lg border border-primary/20\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Priority 1: Add Structured Data</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>‚Ä¢ Add Organization schema to your homepage</li>\n                  <li>‚Ä¢ Include business name, address, phone number, and website</li>\n                  <li>‚Ä¢ Add appropriate schema for your business type (LocalBusiness, Store, etc.)</li>\n                  <li>‚Ä¢ Test your structured data with Google's Rich Results Test</li>\n                </ul>\n              </div>\n              \n              <div className=\"p-4 bg-secondary/50 rounded-lg border border-border\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Priority 2: Optimize Content Structure</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>‚Ä¢ Use exactly one H1 tag per page that clearly describes the page topic</li>\n                  <li>‚Ä¢ Create logical heading hierarchy (H1 ‚Üí H2 ‚Üí H3)</li>\n                  <li>‚Ä¢ Write comprehensive meta descriptions (120-160 characters)</li>\n                  <li>‚Ä¢ Use descriptive, keyword-rich page titles</li>\n                </ul>\n              </div>\n\n              <div className=\"p-4 bg-emerald-50 rounded-lg border border-emerald-200\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Priority 3: Technical Foundations</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>‚Ä¢ Create and submit an XML sitemap</li>\n                  <li>‚Ä¢ Add robots.txt file with proper directives</li>\n                  <li>‚Ä¢ Optimize page loading speeds (under 2 seconds)</li>\n                  <li>‚Ä¢ Ensure mobile-friendly responsive design</li>\n                </ul>\n              </div>\n            </div>\n          </CardContent>\n        )}\n      </Card>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { Circle, Wifi, WifiOff } from 'lucide-react';\nimport { auditService } from '@/services/auditService';\n\nexport function ServerStatus() {\n  const [status, setStatus] = useState<'online' | 'offline' | 'checking'>('checking');\n  const [statusText, setStatusText] = useState('Checking server...');\n\n  useEffect(() => {\n    checkServerStatus();\n    const interval = setInterval(checkServerStatus, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkServerStatus = async () => {\n    try {\n      const health = await auditService.checkHealth();\n      setStatus('online');\n      setStatusText(`Server online (${health.mode} mode)`);\n    } catch (error) {\n      setStatus('offline');\n      const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n      setStatusText(isLocal ? 'Server offline - Start backend' : 'Server temporarily unavailable');\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (status) {\n      case 'online': return 'text-emerald-400';\n      case 'offline': return 'text-red-400';\n      case 'checking': return 'text-amber-400';\n      default: return 'text-gray-400';\n    }\n  };\n\n  const getStatusIcon = () => {\n    switch (status) {\n      case 'online': return <Wifi className=\"w-4 h-4\" />;\n      case 'offline': return <WifiOff className=\"w-4 h-4\" />;\n      case 'checking': return <Circle className=\"w-4 h-4 animate-pulse\" />;\n      default: return <Circle className=\"w-4 h-4\" />;\n    }\n  };\n\n  return (\n    <div className=\"flex items-center gap-2 px-3 py-2 rounded-lg bg-card/50 border border-border/50\">\n      <div className={getStatusColor()}>\n        {getStatusIcon()}\n      </div>\n      <span className=\"text-sm text-muted-foreground\">{statusText}</span>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Search, Loader2, AlertCircle, CheckCircle2, Globe, BarChart3 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { AttentionCards } from '@/components/audit/AttentionCards';\nimport { AIAnalysisSection } from '@/components/audit/AIAnalysisSection';\nimport { BatchAuditSection } from '@/components/audit/BatchAuditSection';\nimport { BusinessValueSection } from '@/components/audit/BusinessValueSection';\nimport { ServerStatus } from '@/components/ServerStatus';\nimport { auditService } from '@/services/auditService';\nimport { isValidURL } from '@/lib/utils';\nimport type { AuditResult, LoadingState } from '@/types/audit';\n\nexport function AuditDashboard() {\n  const [url, setUrl] = useState('');\n  const [results, setResults] = useState<AuditResult | null>(null);\n  const [loadingState, setLoadingState] = useState<LoadingState>('idle');\n  const [error, setError] = useState<string | null>(null);\n  const [includeLighthouse, setIncludeLighthouse] = useState(false);\n  const [activeTab, setActiveTab] = useState<'single' | 'batch'>('single');\n\n  // URL validation\n  const [urlError, setUrlError] = useState<string | null>(null);\n  const [isUrlValid, setIsUrlValid] = useState(false);\n\n  useEffect(() => {\n    if (!url) {\n      setUrlError(null);\n      setIsUrlValid(false);\n      return;\n    }\n\n    if (!isValidURL(url)) {\n      setUrlError('Please enter a valid URL (e.g., https://example.com)');\n      setIsUrlValid(false);\n      return;\n    }\n\n    setUrlError(null);\n    setIsUrlValid(true);\n  }, [url]);\n\n  const handleAudit = async () => {\n    if (!isUrlValid || loadingState === 'loading') return;\n\n    setLoadingState('loading');\n    setError(null);\n    setResults(null);\n\n    try {\n      const auditResults = await auditService.performAudit(url, { \n        includeLighthouse \n      });\n      \n      setResults(auditResults);\n      setLoadingState('success');\n    } catch (err) {\n      const errorMessage = err instanceof Error \n        ? err.message \n        : 'An unexpected error occurred during the audit';\n      \n      setError(errorMessage);\n      setLoadingState('error');\n    }\n  };\n\n  const handleClearCache = async () => {\n    try {\n      await auditService.clearCache();\n      // Show success feedback (you could add a toast here)\n      console.log('Cache cleared successfully');\n    } catch (err) {\n      console.warn('Cache clear failed:', err);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && isUrlValid) {\n      handleAudit();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Academic paper-style navigation */}\n      <nav className=\"border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/95\">\n        <div className=\"container mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n                <span className=\"text-primary-foreground font-bold text-sm\">A</span>\n              </div>\n              <span className=\"font-semibold text-lg\">attentionisallyouneed.app</span>\n            </div>\n            <ServerStatus />\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 max-w-7xl\">\n        {/* Academic paper-style header */}\n        <div className=\"text-center mb-12 space-y-4\">\n          <h1 className=\"academic-title\">\n            Attention is all you <span className=\"text-primary\">need.</span>\n          </h1>\n          <p className=\"academic-subtitle max-w-3xl mx-auto\">\n            A rigorous, no-fuss SEO & technical audit tool ‚Äî designed for the era of AI-powered search optimization.\n          </p>\n          <p className=\"text-sm text-muted-foreground max-w-2xl mx-auto leading-relaxed\">\n            Because while \"attention is all you need\" revolutionized AI, you still need structured data, \n            semantic HTML, and the ability to explain why bounce rate isn't a ranking factor.\n          </p>\n        </div>\n\n        {/* Analysis Mode Selector */}\n        <Card className=\"mb-8 bg-card/50 border-border/50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Search className=\"w-5 h-5\" />\n              Research Analysis Framework\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {/* Tab Selector */}\n            <div className=\"flex gap-4 mb-6 border-b border-border\">\n              <button\n                onClick={() => setActiveTab('single')}\n                className={`pb-3 px-1 border-b-2 transition-colors ${\n                  activeTab === 'single'\n                    ? 'border-primary text-primary font-medium'\n                    : 'border-transparent text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Globe className=\"w-4 h-4\" />\n                  Single Page Analysis\n                </div>\n              </button>\n              <button\n                onClick={() => setActiveTab('batch')}\n                className={`pb-3 px-1 border-b-2 transition-colors ${\n                  activeTab === 'batch'\n                    ? 'border-primary text-primary font-medium'\n                    : 'border-transparent text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <BarChart3 className=\"w-4 h-4\" />\n                  Batch Sitemap Analysis\n                </div>\n              </button>\n            </div>\n\n            {/* Single Page Mode */}\n            {activeTab === 'single' && (\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-muted-foreground\">\n                    Target URL for comprehensive analysis\n                  </label>\n                  <div className=\"flex gap-4\">\n                    <div className=\"flex-1 space-y-1\">\n                      <Input\n                        type=\"url\"\n                        placeholder=\"https://example.com\"\n                        value={url}\n                        onChange={(e) => setUrl(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        className={`${urlError ? 'border-destructive' : ''}`}\n                      />\n                      {urlError && (\n                        <p className=\"text-sm text-destructive flex items-center gap-1\">\n                          <AlertCircle className=\"w-4 h-4\" />\n                          {urlError}\n                        </p>\n                      )}\n                    </div>\n                    \n                    <Button\n                      onClick={handleAudit}\n                      disabled={!isUrlValid || loadingState === 'loading'}\n                      size=\"academic\"\n                      className=\"min-w-[200px]\"\n                    >\n                      {loadingState === 'loading' ? (\n                        <>\n                          <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                          Analyzing...\n                        </>\n                      ) : (\n                        <>\n                          <Search className=\"w-4 h-4 mr-2\" />\n                          Initiate Analysis\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Options & Secondary Actions */}\n                <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between pt-4 border-t border-border/50\">\n                  {/* Lighthouse Option */}\n                  <label className=\"flex items-center gap-2 text-sm cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={includeLighthouse}\n                      onChange={(e) => setIncludeLighthouse(e.target.checked)}\n                      className=\"rounded border-border text-primary focus:ring-primary\"\n                    />\n                    <span className=\"text-muted-foreground\">\n                      Include Lighthouse performance metrics (slower, more comprehensive)\n                    </span>\n                  </label>\n\n                  {/* Secondary Actions */}\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={handleClearCache}\n                      className=\"text-xs\"\n                    >\n                      Clear Cache\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Batch Mode */}\n            {activeTab === 'batch' && (\n              <div className=\"space-y-4\">\n                <div className=\"paper-meta\">\n                  <p className=\"text-sm font-medium mb-1\">Batch Analysis Mode</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Automatically discover and analyze multiple pages from your website's sitemap \n                    for comprehensive optimization insights. Default: 20 pages, Maximum: 50 pages.\n                  </p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Batch Audit Section */}\n        {activeTab === 'batch' && (\n          <BatchAuditSection\n            onBatchComplete={(batchResults) => {\n              console.log('Batch audit completed:', batchResults);\n              // Could show summary or navigate to results\n            }}\n          />\n        )}\n\n        {/* Single Page Results */}\n        {activeTab === 'single' && (\n          <>\n            {/* Error Display */}\n            {error && (\n              <Card className=\"mb-8 border-destructive/20 bg-destructive/5\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center gap-2 text-destructive\">\n                    <AlertCircle className=\"w-5 h-5\" />\n                    <div>\n                      <h3 className=\"font-semibold\">Analysis Failed</h3>\n                      <p className=\"text-sm mt-1\">{error}</p>\n                      <p className=\"text-xs mt-2 text-muted-foreground\">\n                        Please verify the URL is accessible and try again.\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Loading State */}\n            {loadingState === 'loading' && (\n              <Card className=\"mb-8 bg-primary/5 border-primary/20\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center justify-center space-y-4 py-8\">\n                    <div className=\"text-center\">\n                      <Loader2 className=\"w-8 h-8 mx-auto mb-4 animate-spin text-primary\" />\n                      <h3 className=\"font-semibold mb-2\">Conducting comprehensive analysis...</h3>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Analyzing SEO compliance, performance metrics, and accessibility standards.\n                        <br />\n                        <span className=\"text-xs\">\n                          Expected completion: 15-30 seconds\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Results Display */}\n            {results && loadingState === 'success' && (\n              <div className=\"space-y-8\">\n                {/* Analysis Metadata */}\n                <div className=\"paper-meta flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />\n                    Analysis completed successfully\n                  </div>\n                  <div className=\"text-xs font-mono text-muted-foreground\">\n                    Execution: {results.executionTime}ms ‚Ä¢ Mode: {results.mode} ‚Ä¢ {new Date(results.timestamp).toLocaleString()}\n                  </div>\n                </div>\n                \n                {/* Core Metrics */}\n                <AttentionCards results={results} />\n                \n                {/* AI Analysis Section */}\n                <div className=\"border-t border-border pt-8\">\n                  <h2 className=\"academic-section-title\">AI Optimization Analysis</h2>\n                  <AIAnalysisSection results={results} />\n                </div>\n\n                {/* Business Value Section */}\n                <div className=\"border-t border-border pt-8\">\n                  <h2 className=\"academic-section-title\">Business Impact & Action Plan</h2>\n                  <BusinessValueSection results={results} />\n                </div>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Academic footer */}\n        <footer className=\"mt-16 pt-8 border-t border-border/50\">\n          <div className=\"text-center text-sm text-muted-foreground\">\n            <p>\n              Comprehensive SEO analysis powered by modern web standards and AI-readiness protocols.\n            </p>\n            <p className=\"mt-2 text-xs\">\n              Built for digital agencies and technical teams who value both rigor and practical results.\n            </p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { AuditDashboard } from './components/AuditDashboard'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <AuditDashboard />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","falsyToString","value","cx","clsx","cva","base","config","props","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","cn","inputs","twMerge","getScoreStatus","score","calculateAttentionScores","results","seo","_b","_a","performance","_d","_c","accessibility","_f","_e","schema","_h","_g","_j","_i","files","calculateFilesScore","_k","getWittyCopy","type","wittyResponses","status","isValidURL","string","buttonVariants","Button","React.forwardRef","className","size","ref","jsx","Input","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createContext3","rootComponentName","defaultContext","BaseContext","React.createContext","index","Provider","scope","children","context","Context","React.useMemo","useContext2","consumerName","React.useContext","createScope","scopeContexts","contexts","composeContextScopes","scopes","baseScope","scopeHooks","createScope2","overrideScopes","nextScopes","nextScopes2","useScope","currentScope","setRef","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","createSlot","ownerName","SlotClone","createSlotClone","Slot2","forwardedRef","slotProps","childrenArray","React.Children","slottable","isSlottable","newElement","newChildren","child","React.isValidElement","React.cloneElement","childrenRef","getElementRef","props2","mergeProps","React.Fragment","SLOTTABLE_IDENTIFIER","childProps","overrideProps","propName","slotPropValue","childPropValue","args","result","element","getter","mayWarn","NODES","Primitive","primitive","Slot","Node","asChild","primitiveProps","Comp","PROGRESS_NAME","DEFAULT_MAX","createProgressContext","createProgressScope","ProgressProvider","useProgressContext","Progress","__scopeProgress","valueProp","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","getInvalidMaxError","max","isValidValueNumber","getInvalidValueError","valueLabel","isNumber","getProgressState","INDICATOR_NAME","ProgressIndicator","indicatorProps","maxValue","propValue","componentName","Root","Indicator","getProgressColor","ProgressPrimitive.Root","ProgressPrimitive.Indicator","AttentionCards","scores","cards","Search","Zap","Eye","Code","jsxs","TrendingUp","card","Icon","FileText","AIAnalysisSection","aiReadinessScore","maxScore","aiStatus","aiFactors","Globe","Brain","factor","finding","idx","Shield","APIError","message","AuditService","__publicField","url","options","cacheKey","cached","response","errorData","error","maxUrls","auditService","BatchAuditSection","onBatchComplete","setUrl","useState","setMaxUrls","isDiscovering","setIsDiscovering","isBatchRunning","setIsBatchRunning","discoveryResults","setDiscoveryResults","batchResults","setBatchResults","setError","urlError","setUrlError","isUrlValid","handleUrlChange","handleDiscoverSitemap","err","errorMessage","handleBatchAudit","getScoreColor","MapPin","AlertCircle","Fragment","Loader2","BarChart3","s","sitemap","CheckCircle2","Clock","BusinessValueSection","showImplementationGuide","setShowImplementationGuide","businessImpact","issues","opportunities","quickWins","overallScore","calculateOverallAIReadiness","schemaScore","seoScore","techScore","responseTime","perfScore","getImpactColor","getImpactBg","AlertTriangle","issue","win","opp","Lightbulb","Target","ArrowRight","ServerStatus","setStatus","statusText","setStatusText","useEffect","checkServerStatus","interval","health","isLocal","getStatusColor","getStatusIcon","Wifi","WifiOff","Circle","AuditDashboard","setResults","loadingState","setLoadingState","includeLighthouse","setIncludeLighthouse","activeTab","setActiveTab","setIsUrlValid","handleAudit","auditResults","handleClearCache","handleKeyPress","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2,3,8,9,10,11,12]}