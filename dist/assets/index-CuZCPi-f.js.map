{"version":3,"file":"index-CuZCPi-f.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/class-variance-authority/dist/index.mjs","../../src/lib/utils.ts","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../src/components/ui/card.tsx","../../node_modules/@radix-ui/react-context/dist/index.mjs","../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/@radix-ui/react-primitive/dist/index.mjs","../../node_modules/@radix-ui/react-progress/dist/index.mjs","../../src/components/ui/progress.tsx","../../src/components/audit/AttentionCards.tsx","../../src/components/audit/AEOAnalysis.tsx","../../src/components/audit/AIAnalysisSection.tsx","../../src/services/auditService.ts","../../src/components/audit/BatchAuditSection.tsx","../../src/components/audit/BusinessValueSection.tsx","../../src/components/audit/PSIPerformanceSection.tsx","../../src/components/audit/EATAnalysisSection.tsx","../../src/components/ServerStatus.tsx","../../src/components/AuditProgressBar.tsx","../../src/components/AuditDashboard.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\nimport type { ScoreStatus, AttentionScores } from '@/types/audit';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Get score status based on numeric score - preserve your logic\n */\nexport function getScoreStatus(score: number): ScoreStatus {\n  if (score >= 90) return 'excellent';\n  if (score >= 80) return 'good';\n  if (score >= 60) return 'warning';\n  return 'poor';\n}\n\n/**\n * Get score color class based on status\n */\nexport function getScoreColorClass(status: ScoreStatus): string {\n  const colors = {\n    excellent: 'text-emerald-400',\n    good: 'text-green-400',\n    warning: 'text-amber-400',\n    poor: 'text-red-400',\n  };\n  return colors[status];\n}\n\n/**\n * Calculate AI-era attention scores with focus on machine comprehension\n */\nexport function calculateAttentionScores(results: any): AttentionScores {\n  const seo = results?.tests?.seo?.score || 0;\n  const performance = results?.tests?.performance?.score || 0;\n  const accessibility = results?.tests?.accessibility?.score || 0;\n  // Use AI-readiness score if available, fallback to legacy schema score\n  const schema = results?.tests?.schema?.aiReadinessScore || results?.tests?.schema?.score || 0;\n  const files = calculateFilesScore(results?.tests?.files);\n  \n  // AI-era weighted calculation: Schema intelligence takes priority\n  // Schema (40%) + SEO (25%) + Performance (20%) + Accessibility (10%) + Files (5%)\n  const overall = Math.round(\n    (schema * 0.4 + seo * 0.25 + performance * 0.2 + accessibility * 0.1 + files * 0.05)\n  );\n\n  return {\n    overall,\n    seo,\n    performance,\n    accessibility,\n    schema,\n    files,\n  };\n}\n\n/**\n * Calculate new 5-category AI comprehension scores (100% specification)\n */\nexport function calculateNewCategoryScores(results: any) {\n  // Check for detailed aiOptimization data first, then fallback to basic aeo data\n  const ai = results?.tests?.aiOptimization || results?.tests?.aeo;\n  \n  if (!ai) {\n    return {\n      overall: 0,\n      machineComprehension: 0,\n      contentStructure: 0,\n      technicalQuality: 0,\n      accessibility: 0,\n      trustGovernance: 0\n    };\n  }\n\n  // If we have detailed category data, use it\n  if (ai.machineComprehension || ai.contentStructure || ai.technicalQuality || ai.accessibility || ai.trustGovernance) {\n    const machineComprehension = Math.round(\n      (ai.machineComprehension?.structuredData?.score || 0) * 15/15 +\n      (ai.machineComprehension?.entityClarity?.score || 0) * 10/10 + \n      (ai.machineComprehension?.semanticHTML?.score || 0) * 5/5\n    ) * 30/30;\n\n    const contentStructure = Math.round(\n      (ai.contentStructure?.sectionGranularity?.score || 0) * 10/10 +\n      (ai.contentStructure?.paragraphReadability?.score || 0) * 5/5 +\n      (ai.contentStructure?.answerSignals?.score || 0) * 5/5 +\n      (ai.contentStructure?.deepLinking?.score || 0) * 5/5\n    ) * 25/25;\n\n    const technicalQuality = Math.round(\n      (ai.technicalQuality?.coreWebVitals?.score || 0) * 10/10 +\n      (ai.technicalQuality?.crawlability?.score || 0) * 8/8 +\n      (ai.technicalQuality?.renderingStrategy?.score || 0) * 7/7\n    ) * 25/25;\n\n    const accessibility = Math.round(\n      (ai.accessibility?.altTextCoverage?.score || 0) * 4/4 +\n      (ai.accessibility?.contrastAndLandmarks?.score || 0) * 3/3\n    ) * 7/7;\n\n    const trustGovernance = Math.round(\n      (ai.trustGovernance?.authorExpertise?.score || 0) * 5/5 +\n      (ai.trustGovernance?.publisherTransparency?.score || 0) * 4/4 +\n      (ai.trustGovernance?.externalCorroboration?.score || 0) * 3/3 +\n      (ai.trustGovernance?.llmsTxtGovernance?.score || 0) * 1/1\n    ) * 13/13;\n\n    const overall = Math.round(\n      (machineComprehension * 0.30) +\n      (contentStructure * 0.25) +\n      (technicalQuality * 0.25) +\n      (accessibility * 0.07) +\n      (trustGovernance * 0.13)\n    );\n\n    return {\n      overall,\n      machineComprehension,\n      contentStructure,\n      technicalQuality,\n      accessibility,\n      trustGovernance\n    };\n  }\n\n  // Fallback: Use basic aeo score and derive estimated category scores\n  const baseScore = ai.score || 0;\n  const seoScore = results?.tests?.seo?.score || 0;\n  const performanceScore = results?.tests?.performance?.score || 0;\n  const accessibilityScore = results?.tests?.accessibility?.score || 0;\n  \n  // Estimate category scores from available data\n  const machineComprehension = Math.min(baseScore + 10, 100); // Schema tends to be better\n  const contentStructure = Math.max(baseScore - 5, 0); // Content structure impacts base score\n  const technicalQuality = Math.round((performanceScore + seoScore) / 2); // Average of perf/SEO\n  const accessibility = accessibilityScore || Math.max(baseScore - 15, 0); // Use accessibility if available\n  const trustGovernance = Math.max(baseScore - 10, 0); // Trust signals affect base score\n  \n  const overall = Math.round(\n    (machineComprehension * 0.30) +\n    (contentStructure * 0.25) +\n    (technicalQuality * 0.25) +\n    (accessibility * 0.07) +\n    (trustGovernance * 0.13)\n  );\n\n  return {\n    overall,\n    machineComprehension,\n    contentStructure,\n    technicalQuality,\n    accessibility,\n    trustGovernance\n  };\n}\n\n/**\n * Calculate files score - preserve your logic\n */\nfunction calculateFilesScore(files: any): number {\n  if (!files) return 0;\n  \n  let score = 0;\n  if (files.robots?.exists) score += 30;\n  if (files.sitemap?.exists) score += 40;\n  if (files.rss?.exists) score += 15;\n  if (files.llms?.exists) score += 15;\n  \n  return Math.min(score, 100);\n}\n\n/**\n * Format bytes - utility function\n */\nexport function formatBytes(bytes: number): string {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n}\n\n/**\n * Format duration - utility function\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) return `${ms}ms`;\n  const seconds = ms / 1000;\n  if (seconds < 60) return `${seconds.toFixed(1)}s`;\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}m ${remainingSeconds}s`;\n}\n\n/**\n * Truncate text - utility function\n */\nexport function truncateText(text: string, length = 100): string {\n  if (text.length <= length) return text;\n  return text.substring(0, length) + '...';\n}\n\n/**\n * Generate witty insights - preserve your personality\n */\nexport function getScoreInterpretation(score: number): string {\n  if (score >= 90) return 'exceptional';\n  if (score >= 80) return 'strong';\n  if (score >= 70) return 'adequate';\n  if (score >= 60) return 'concerning';\n  return 'requires immediate attention';\n}\n\n/**\n * Generate academic-style witty copy - your brand voice\n */\nexport function getWittyCopy(type: string, score: number): string {\n  const wittyResponses = {\n    seo: {\n      excellent: \"SEO game stronger than your morning coffee ☕\",\n      good: \"Google approves of your optimization efforts 👍\",\n      warning: \"Your SEO needs some love and attention 💕\",\n      poor: \"Google is giving you the silent treatment 🤐\"\n    },\n    performance: {\n      excellent: \"Faster than a researcher finding typos in their own paper ⚡\",\n      good: \"Loading speed that won't test user patience ⏱️\",\n      warning: \"Users are questioning their life choices while waiting 🤔\",\n      poor: \"Slower than peer review process 🐌\"\n    },\n    accessibility: {\n      excellent: \"More inclusive than a diverse research team 🌟\",\n      good: \"Accessibility compliance looking solid 👌\",\n      warning: \"Some users might feel left out 😕\",\n      poor: \"Accessibility barriers higher than academic paywalls 🚧\"\n    },\n    schema: {\n      excellent: \"AI-readiness level: PhD dissertation 🎓\",\n      good: \"Schema markup that makes AI assistants happy 🤖\",\n      warning: \"Your structured data needs some structure 📊\",\n      poor: \"Machines are confused, humans are lost 🤷\"\n    }\n  };\n\n  const status = getScoreStatus(score);\n  return wittyResponses[type as keyof typeof wittyResponses]?.[status] || \n         \"Analysis complete, results may vary ¯\\\\_(ツ)_/¯\";\n}\n\n/**\n * Debounce function for search inputs\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\n/**\n * Check if URL is valid\n */\nexport function isValidURL(string: string): boolean {\n  try {\n    new URL(string);\n    return true;\n  } catch {\n    return false;\n  }\n}","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        // Academic paper-inspired variants\n        research: \"bg-primary/10 text-primary border border-primary/20 hover:bg-primary/20 hover:border-primary/30\",\n        finding: \"bg-emerald-500/10 text-emerald-400 border border-emerald-500/20 hover:bg-emerald-500/20\",\n        warning: \"bg-amber-500/10 text-amber-400 border border-amber-500/20 hover:bg-amber-500/20\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n        // Academic sizing\n        academic: \"h-12 px-6 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          // Academic paper-inspired styling\n          \"academic-focus bg-card/50 border-border hover:border-border/60\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      // Academic paper-inspired card styling\n      \"research-card border-border/50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","// packages/react/context/src/create-context.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/progress.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n    }\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n    }\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n    return /* @__PURE__ */ jsx(ProgressProvider, { scope: __scopeProgress, value, max, children: /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": isNumber(value) ? value : void 0,\n        \"aria-valuetext\": valueLabel,\n        role: \"progressbar\",\n        \"data-state\": getProgressState(value, max),\n        \"data-value\": value ?? void 0,\n        \"data-max\": max,\n        ...progressProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": getProgressState(context.value, context.max),\n        \"data-value\": context.value ?? void 0,\n        \"data-max\": context.max,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport {\n  Indicator,\n  Progress,\n  ProgressIndicator,\n  Root,\n  createProgressScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> & {\n    status?: 'excellent' | 'good' | 'warning' | 'poor';\n  }\n>(({ className, value, status, ...props }, ref) => {\n  // Academic-style progress coloring\n  const getProgressColor = (status?: string) => {\n    switch (status) {\n      case 'excellent': return 'bg-emerald-500';\n      case 'good': return 'bg-green-500';\n      case 'warning': return 'bg-amber-500';\n      case 'poor': return 'bg-red-500';\n      default: return 'bg-primary';\n    }\n  };\n\n  return (\n    <ProgressPrimitive.Root\n      ref={ref}\n      className={cn(\n        \"relative h-2 w-full overflow-hidden rounded-full bg-secondary\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        className={cn(\n          \"h-full w-full flex-1 transition-all duration-1000 ease-out\",\n          getProgressColor(status)\n        )}\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n});\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }","import { TrendingUp, Zap, Eye, Brain, BookOpen, Users, Info, X } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Button } from '@/components/ui/button';\nimport { calculateNewCategoryScores, getScoreStatus } from '@/lib/utils';\nimport { useState } from 'react';\nimport type { AuditResult } from '@/types/audit';\n\ninterface AttentionCardsProps {\n  results: AuditResult;\n}\n\nexport function AttentionCards({ results }: AttentionCardsProps) {\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const scores = calculateNewCategoryScores(results);\n\n  const cards = [\n    {\n      title: 'Machine Comprehension',\n      subtitle: '(30%)',\n      score: scores.machineComprehension,\n      icon: Brain,\n      description: 'Can AI actually understand your site? — we check schema, entities, headings, and alt text.',\n      gradient: 'from-blue-500/10 to-blue-600/10',\n      borderColor: 'border-blue-500/20',\n      priority: 'Strategic',\n    },\n    {\n      title: 'Content Structure & Answerability',\n      subtitle: '(25%)',\n      score: scores.contentStructure,\n      icon: BookOpen,\n      description: 'Is your content chunkable and answer-ready? — we measure section sizes, Q&A headings, and lists.',\n      gradient: 'from-emerald-500/10 to-emerald-600/10',\n      borderColor: 'border-emerald-500/20',\n      priority: 'Quick Win',\n    },\n    {\n      title: 'Technical Quality',\n      subtitle: '(25%)',\n      score: scores.technicalQuality,\n      icon: Zap,\n      description: 'Fast, crawlable, visible — Core Web Vitals, robots/sitemap, and content without JS walls.',\n      gradient: 'from-orange-500/10 to-orange-600/10',\n      borderColor: 'border-orange-500/20',\n      priority: 'Quick Win',\n    },\n    {\n      title: 'Accessibility & Inclusivity',\n      subtitle: '(7%)',\n      score: scores.accessibility,\n      icon: Eye,\n      description: 'Alt text, contrast, and landmarks — signals that help both humans and machines read your site.',\n      gradient: 'from-purple-500/10 to-purple-600/10',\n      borderColor: 'border-purple-500/20',\n      priority: 'Quick Win',\n    },\n    {\n      title: 'Trust, Transparency & Governance',\n      subtitle: '(13%)',\n      score: scores.trustGovernance,\n      icon: Users,\n      description: 'Who\\'s behind the content? — author bios, publisher details, corroboration, and llms.txt governance.',\n      gradient: 'from-indigo-500/10 to-indigo-600/10',\n      borderColor: 'border-indigo-500/20',\n      priority: 'Strategic',\n    },\n  ];\n\n  const InfoModal = () => (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-background rounded-lg max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold\">ℹ️ How we evaluate your site</h2>\n            <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowInfoModal(false)}>\n              <X className=\"w-4 h-4\" />\n            </Button>\n          </div>\n          \n          <div className=\"space-y-6 text-sm\">\n            <div>\n              <p className=\"text-muted-foreground mb-4\">\n                <strong>Attention may be all you need in AI…</strong><br/>\n                but for websites, AI engines also need structure, speed, and trust.\n              </p>\n              <p className=\"text-muted-foreground\">\n                Our audit looks at five big levers that make your site easier for AI systems (Google AI Overviews, ChatGPT, Gemini, Bing Copilot, etc.) to understand, chunk, and cite.\n              </p>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">🔎 What we measure</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium text-blue-600\">🧠 Machine Comprehension (30%)</h4>\n                  <p className=\"text-muted-foreground mt-1\">Can machines actually understand your site? We check schema markup (Organization, Product, FAQ), entity links (LinkedIn, Wikidata, Crunchbase), semantic HTML, and alt text.</p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-emerald-600\">📚 Content Structure & Answerability (25%)</h4>\n                  <p className=\"text-muted-foreground mt-1\">Can your content be snapped into answers? We measure section sizes, paragraph readability, Q&A-style headings, lists/tables, and deep-link anchors.</p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-orange-600\">⚡ Technical Quality (25%)</h4>\n                  <p className=\"text-muted-foreground mt-1\">Does your site load fast and render clearly? We look at Core Web Vitals (LCP, INP, CLS), crawlability (robots.txt + sitemap), and whether key content shows up without JavaScript.</p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-purple-600\">♿ Accessibility & Inclusivity (7%)</h4>\n                  <p className=\"text-muted-foreground mt-1\">Alt text, color contrast, ARIA landmarks — signals that help both humans and machines parse your content.</p>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-indigo-600\">🤝 Trust, Transparency & Governance (13%)</h4>\n                  <p className=\"text-muted-foreground mt-1\">Who's behind your content? We check for author bios, publisher details, external corroboration, and whether you declare AI access in llms.txt.</p>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">⚖️ How the score works</h3>\n              <ul className=\"space-y-2 text-muted-foreground\">\n                <li>• Each category has a fixed weight (in % above).</li>\n                <li>• Each metric is scored from evidence (e.g. tokens per section, % of images with alt text).</li>\n                <li>• The overall score (0–100) is a weighted mean of all categories.</li>\n                <li>• If parts of the site are JS-locked or time out, we show partial results instead of guessing.</li>\n              </ul>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">🤖 Why it matters</h3>\n              <p className=\"text-muted-foreground mb-2\">\n                AI assistants don't just \"read\" — they chunk, extract, and cross-check.\n              </p>\n              <p className=\"text-muted-foreground\">\n                The closer your site is to being machine-friendly, the more likely it is to show up as the cited source in AI-generated answers.\n              </p>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">📚 Learn more (external references)</h3>\n              <ul className=\"space-y-2 text-muted-foreground\">\n                <li>• Google Search Central — AI Overviews: How it works</li>\n                <li>• Google Developers — Core Web Vitals</li>\n                <li>• W3C — Web Content Accessibility Guidelines (WCAG) 2.1</li>\n                <li>• Schema.org — Structured Data reference</li>\n                <li>• OpenAI — Crawling and llms.txt</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Overall Score Header */}\n      <Card className=\"border-primary/30 shadow-md\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <TrendingUp className=\"w-6 h-6 text-primary\" />\n              <div>\n                <CardTitle className=\"text-xl font-serif\">AI Comprehension Analysis</CardTitle>\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  How well AI systems can understand and interpret your website's content and purpose\n                </p>\n              </div>\n            </div>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => setShowInfoModal(true)}\n              className=\"gap-2\"\n            >\n              <Info className=\"w-4 h-4\" />\n              How it works\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"space-y-2\">\n              <div className=\"score-display\">{scores.overall}</div>\n              <div className=\"text-sm font-medium text-muted-foreground\">\n                AI Readiness Score\n              </div>\n            </div>\n            <div className=\"text-right space-y-1\">\n              <div className={`text-sm font-medium px-3 py-1 rounded-full border ${\n                getScoreStatus(scores.overall) === 'excellent' ? 'bg-emerald-50 text-emerald-700 border-emerald-200' :\n                getScoreStatus(scores.overall) === 'good' ? 'bg-green-50 text-green-700 border-green-200' :\n                getScoreStatus(scores.overall) === 'warning' ? 'bg-amber-50 text-amber-700 border-amber-200' :\n                'bg-red-50 text-red-700 border-red-200'\n              }`}>\n                {getScoreStatus(scores.overall).toUpperCase()}\n              </div>\n              <div className=\"text-xs text-muted-foreground font-mono\">\n                {results.executionTime}ms analysis\n              </div>\n            </div>\n          </div>\n          <Progress \n            value={scores.overall} \n            status={getScoreStatus(scores.overall)} \n            className=\"h-2 mb-4\"\n          />\n          <div className=\"paper-meta\">\n            <p className=\"text-sm italic text-muted-foreground\">\n              Attention may be all you need in AI, but websites need structure, speed, and trust.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 5 Category Cards with Priority Grouping */}\n      <div className=\"space-y-6\">\n        {/* Quick Wins Section */}\n        <div>\n          <div className=\"flex items-center gap-2 mb-4\">\n            <h3 className=\"text-lg font-semibold text-foreground\">⚡ Quick Wins</h3>\n            <span className=\"text-xs px-2 py-1 bg-green-100 text-green-700 rounded-full\">Lower effort, immediate impact</span>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {cards.filter(card => card.priority === 'Quick Win').map((card) => (\n              <CategoryCard key={card.title} card={card} />\n            ))}\n          </div>\n        </div>\n\n        {/* Strategic Section */}\n        <div>\n          <div className=\"flex items-center gap-2 mb-4\">\n            <h3 className=\"text-lg font-semibold text-foreground\">🎯 Strategic</h3>\n            <span className=\"text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded-full\">Higher effort, long-term value</span>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {cards.filter(card => card.priority === 'Strategic').map((card) => (\n              <CategoryCard key={card.title} card={card} />\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Info Modal */}\n      {showInfoModal && <InfoModal />}\n\n    </div>\n  );\n}\n\n// CategoryCard component\nfunction CategoryCard({ card }: { card: any }) {\n  const Icon = card.icon;\n  const status = getScoreStatus(card.score);\n  \n  return (\n    <Card className=\"metric-card hover:shadow-lg transition-all duration-200 h-full\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <Icon className=\"w-5 h-5\" />\n            <div>\n              <CardTitle className=\"text-base leading-tight\">{card.title}</CardTitle>\n              <span className=\"text-xs text-muted-foreground font-mono\">{card.subtitle}</span>\n            </div>\n          </div>\n          <span className={`text-xs px-2 py-1 rounded-full ${\n            card.priority === 'Quick Win' \n              ? 'bg-green-100 text-green-700' \n              : 'bg-blue-100 text-blue-700'\n          }`}>\n            {card.priority}\n          </span>\n        </div>\n        <p className=\"text-sm text-muted-foreground leading-relaxed\">\n          {card.description}\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-2xl font-bold text-foreground\">{card.score}</div>\n            <div className={`text-sm font-medium px-3 py-1 rounded-full ${\n              status === 'excellent' ? 'bg-emerald-500/20 text-emerald-400' :\n              status === 'good' ? 'bg-green-500/20 text-green-400' :\n              status === 'warning' ? 'bg-amber-500/20 text-amber-400' :\n              'bg-red-500/20 text-red-400'\n            }`}>\n              {status}\n            </div>\n          </div>\n          <Progress value={card.score} status={status} className=\"h-2\" />\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { AEOResult } from '@/types/audit';\nimport { getScoreStatus, getScoreColorClass } from '@/lib/utils';\n\ninterface AEOAnalysisProps {\n  aeoResult: AEOResult;\n}\n\nexport function AEOAnalysis({ aeoResult }: AEOAnalysisProps) {\n  const scoreStatus = getScoreStatus(aeoResult.score);\n  const scoreColorClass = getScoreColorClass(scoreStatus);\n\n  const ScopeBadge = ({ scope }: { scope: string }) => (\n    <span className={`inline-block px-1.5 py-0.5 text-xs rounded-full font-medium ${\n      scope === 'english-only' \n        ? 'bg-orange-100 text-orange-700 border border-orange-200' \n        : 'bg-blue-100 text-blue-700 border border-blue-200'\n    }`}>\n      {scope === 'english-only' ? 'EN' : '🌍'}\n    </span>\n  );\n\n  const getScope = (scope?: 'multilingual-safe' | 'english-only'): 'multilingual-safe' | 'english-only' =>\n    scope || 'multilingual-safe';\n\n  const languageDisplay = (typeof aeoResult.language === 'string' && aeoResult.language)\n    ? aeoResult.language.toUpperCase()\n    : 'UNKNOWN';\n\n  return (\n    <div className=\"border-t border-border pt-6\">\n      <div className=\"flex items-center gap-3 mb-4\">\n        <h3 className=\"text-lg font-semibold text-foreground\">\n          AEO Analysis\n        </h3>\n        <div className=\"flex items-center gap-2\">\n          <span className={`text-2xl font-bold ${scoreColorClass}`}>\n            {aeoResult.score}\n          </span>\n          <span className=\"text-xs text-muted-foreground uppercase tracking-wide\">\n            Answer Engine Optimization\n          </span>\n        </div>\n      </div>\n      <div className=\"flex items-center gap-2 text-xs mb-4\">\n        <span className=\"font-medium text-amber-700\">⚠️ Text-Based Analysis</span>\n        <span className=\"text-muted-foreground\">\n          Dynamic content and user interactions not evaluated\n        </span>\n      </div>\n\n      <div className=\"space-y-4\">\n        {/* Language Detection */}\n        <div className=\"bg-muted/30 p-4 rounded-lg\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <h4 className=\"font-medium text-foreground\">Page Language</h4>\n            <span className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded uppercase font-mono\">\n              {aeoResult.language}\n            </span>\n          </div>\n          <p className=\"text-sm text-muted-foreground\">\n            Detected language affects which AEO checks can be performed\n          </p>\n        </div>\n\n        {/* FAQ Analysis */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"bg-muted/30 p-4 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <h4 className=\"font-medium text-foreground\">FAQ Content</h4>\n              <ScopeBadge scope={getScope(aeoResult.faq?.patternsScope)} />\n            </div>\n            <div className=\"space-y-1 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Schema FAQ:</span>\n                <span className={aeoResult.faq?.schemaDetected ? 'text-green-600' : 'text-red-600'}>\n                  {aeoResult.faq?.schemaDetected ? '✓' : '✗'}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Pattern matches:</span>\n                <span className=\"text-foreground font-medium\">\n                  {aeoResult.faq?.patternsFound ?? 0}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Enhanced Heading Structure */}\n          {aeoResult.headingStructure ? (\n            <div className=\"bg-muted/30 p-4 rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-3\">\n                <h4 className=\"font-medium text-foreground\">Heading Hierarchy</h4>\n                <ScopeBadge scope={getScope(aeoResult.headingStructure.scope)} />\n              </div>\n              \n              <div className=\"space-y-3 text-sm\">\n                {/* Basic hierarchy info */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Valid hierarchy:</span>\n                    <span className={aeoResult.headingStructure.hierarchy ? 'text-green-600' : 'text-red-600'}>\n                      {aeoResult.headingStructure.hierarchy ? '✓ Valid' : '✗ Issues'}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-muted-foreground\">Max depth:</span>\n                    <span className=\"text-foreground font-medium\">\n                      H{aeoResult.headingStructure.depth}\n                    </span>\n                  </div>\n                </div>\n\n                {/* Heading counts by level */}\n                <div className=\"border-t border-border/30 pt-2\">\n                  <div className=\"text-xs text-muted-foreground mb-1\">Heading distribution:</div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {Object.entries(aeoResult.headingStructure.counts || {})\n                      .filter(([, count]) => (count as number) > 0)\n                      .map(([tag, count]) => (\n                        <span key={tag} className={`px-2 py-1 rounded text-xs font-medium ${\n                          tag === 'h1' ? 'bg-blue-100 text-blue-700' :\n                          tag === 'h2' ? 'bg-green-100 text-green-700' :\n                          tag === 'h3' ? 'bg-yellow-100 text-yellow-700' :\n                          'bg-gray-100 text-gray-700'\n                        }`}>\n                          {(tag as string).toUpperCase()}: {count as number}\n                        </span>\n                      ))}\n                  </div>\n                </div>\n\n                {/* H1 specific analysis */}\n                {aeoResult.headingStructure.counts && (\n                  <div className=\"border-t border-border/30 pt-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs text-muted-foreground\">H1 analysis:</span>\n                      <span className={`text-xs font-medium ${\n                        (aeoResult.headingStructure.counts.h1 || 0) === 1 ? 'text-green-600' :\n                        (aeoResult.headingStructure.counts.h1 || 0) === 0 ? 'text-red-600' :\n                        (aeoResult.headingStructure.counts.h1 || 0) <= 3 ? 'text-yellow-600' :\n                        'text-orange-600'\n                      }`}>\n                        {(aeoResult.headingStructure.counts.h1 || 0) === 0 ? 'Missing primary heading' :\n                         (aeoResult.headingStructure.counts.h1 || 0) === 1 ? 'Perfect single H1' :\n                         (aeoResult.headingStructure.counts.h1 || 0) <= 3 ? `${aeoResult.headingStructure.counts.h1} H1s (sectioned content)` :\n                         `${aeoResult.headingStructure.counts.h1} H1s (consider reducing)`}\n                      </span>\n                    </div>\n                  </div>\n                )}\n\n                {/* Enhanced hierarchy analysis details */}\n                {aeoResult.headingStructure.detailsAnalysis && (\n                  <div className=\"border-t border-border/30 pt-3 space-y-2\">\n                    <div className=\"text-xs font-medium text-foreground mb-2\">Detailed Hierarchy Analysis</div>\n                    \n                    {/* Analysis score */}\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-xs text-muted-foreground\">Structure score:</span>\n                      <span className={`text-xs font-bold ${\n                        (aeoResult.headingStructure.analysisScore || 0) >= 80 ? 'text-green-600' :\n                        (aeoResult.headingStructure.analysisScore || 0) >= 60 ? 'text-yellow-600' :\n                        'text-red-600'\n                      }`}>\n                        {aeoResult.headingStructure.analysisScore || 0}/100\n                      </span>\n                    </div>\n\n                    {/* Issues */}\n                    {(aeoResult.headingStructure.analysisIssues?.length || 0) > 0 && (\n                      <div className=\"bg-red-50 border border-red-200 rounded p-2\">\n                        <div className=\"text-xs font-medium text-red-700 mb-1\">Issues Found:</div>\n                        <ul className=\"text-xs text-red-600 space-y-1\">\n                          {(aeoResult.headingStructure.analysisIssues || []).slice(0, 3).map((issue, index) => (\n                            <li key={index} className=\"flex items-start gap-1\">\n                              <span className=\"text-red-400 mt-0.5\">•</span>\n                              <span>{issue}</span>\n                            </li>\n                          ))}\n                        </ul>\n                        {(aeoResult.headingStructure.analysisIssues?.length || 0) > 3 && (\n                          <div className=\"text-xs text-red-500 mt-1\">\n                            +{(aeoResult.headingStructure.analysisIssues?.length || 0) - 3} more issues\n                          </div>\n                        )}\n                      </div>\n                    )}\n\n                    {/* Strengths */}\n                    {(aeoResult.headingStructure.analysisStrengths?.length || 0) > 0 && (\n                      <div className=\"bg-green-50 border border-green-200 rounded p-2\">\n                        <div className=\"text-xs font-medium text-green-700 mb-1\">Strengths:</div>\n                        <ul className=\"text-xs text-green-600 space-y-1\">\n                          {(aeoResult.headingStructure.analysisStrengths || []).slice(0, 3).map((strength, index) => (\n                            <li key={index} className=\"flex items-start gap-1\">\n                              <span className=\"text-green-400 mt-0.5\">✓</span>\n                              <span>{strength}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n\n                    {/* Detailed metrics */}\n                    {aeoResult.headingStructure.detailsAnalysis && (\n                      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Questions:</span>\n                          <span className=\"font-medium\">{aeoResult.headingStructure.detailsAnalysis.questionCount}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-muted-foreground\">Avg length:</span>\n                          <span className=\"font-medium\">{aeoResult.headingStructure.detailsAnalysis.averageLength} chars</span>\n                        </div>\n                        {aeoResult.headingStructure.detailsAnalysis.emptyHeadings > 0 && (\n                          <div className=\"flex justify-between text-red-600\">\n                            <span>Empty headings:</span>\n                            <span className=\"font-medium\">{aeoResult.headingStructure.detailsAnalysis.emptyHeadings}</span>\n                          </div>\n                        )}\n                        {aeoResult.headingStructure.detailsAnalysis.duplicateHeadings.length > 0 && (\n                          <div className=\"flex justify-between text-orange-600\">\n                            <span>Duplicates:</span>\n                            <span className=\"font-medium\">{aeoResult.headingStructure.detailsAnalysis.duplicateHeadings.length}</span>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"bg-muted/30 p-4 rounded-lg opacity-60\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h4 className=\"font-medium text-foreground\">Heading Hierarchy</h4>\n                <ScopeBadge scope=\"multilingual-safe\" />\n              </div>\n              <div className=\"text-sm text-muted-foreground\">No heading structure detected</div>\n            </div>\n          )}\n        </div>\n\n        {/* List Structure and Conversational Tone */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {aeoResult.listStructure ? (\n            <div className=\"bg-muted/30 p-4 rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h4 className=\"font-medium text-foreground\">List Structure</h4>\n                <span className=\"text-xs text-muted-foreground ml-1\">(&lt;ul&gt;, &lt;ol&gt;, &lt;li&gt; elements)</span>\n                <ScopeBadge scope={getScope(aeoResult.listStructure.scope)} />\n              </div>\n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Total lists:</span>\n                  <span className=\"text-foreground font-medium\">\n                    {aeoResult.listStructure.total}\n                  </span>\n                </div>\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-muted-foreground\">• Bulleted: {aeoResult.listStructure.unordered}</span>\n                  <span className=\"text-muted-foreground\">• Numbered: {aeoResult.listStructure.ordered}</span>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"bg-muted/30 p-4 rounded-lg opacity-60\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h4 className=\"font-medium text-foreground\">List Structure</h4>\n                <span className=\"text-xs text-muted-foreground ml-1\">(&lt;ul&gt;, &lt;ol&gt;, &lt;li&gt; elements)</span>\n                <ScopeBadge scope=\"multilingual-safe\" />\n              </div>\n              <div className=\"text-sm text-muted-foreground\">List structure not detected</div>\n            </div>\n          )}\n\n          {/* Conversational Tone (English only) */}\n          {aeoResult.conversationalTone && (\n            <div className=\"bg-muted/30 p-4 rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h4 className=\"font-medium text-foreground\">Conversational Tone</h4>\n                <ScopeBadge scope={getScope(aeoResult.conversationalTone.scope)} />\n              </div>\n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Score:</span>\n                  <span className=\"text-foreground font-medium\">\n                    {aeoResult.conversationalTone?.score ?? 0}/100\n                  </span>\n                </div>\n                <div className=\"text-xs text-muted-foreground\">\n                  Questions: {aeoResult.conversationalTone?.factors?.questionWords ?? 0} • \n                  Avg sentence: {aeoResult.conversationalTone?.factors?.avgSentenceLength ?? 0} words\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Placeholder for non-English sites */}\n          {!aeoResult.conversationalTone && aeoResult.language !== 'en' && (\n            <div className=\"bg-muted/30 p-4 rounded-lg opacity-60\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h4 className=\"font-medium text-foreground\">Conversational Tone</h4>\n                <ScopeBadge scope=\"english-only\" />\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                Analysis not available for {languageDisplay} content\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Enhanced Content Pattern Analysis */}\n        <div className=\"bg-muted/30 p-4 rounded-lg\">\n          <h4 className=\"font-medium text-foreground mb-3\">AI-Optimized Content Patterns</h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            {/* FAQ Patterns */}\n            <div className=\"space-y-2\">\n              <div className=\"text-xs font-medium text-foreground\">FAQ & Question Content</div>\n              <div className=\"space-y-1 text-xs\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Schema FAQ:</span>\n                  <span className={aeoResult.faq?.schemaDetected ? 'text-green-600' : 'text-gray-500'}>\n                    {aeoResult.faq?.schemaDetected ? '✓ Found' : '✗ None'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">FAQ patterns:</span>\n                  <span className=\"font-medium\">{aeoResult.faq?.patternsFound || 0}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Question headings:</span>\n                  <span className=\"font-medium\">\n                    {aeoResult.headingStructure?.detailsAnalysis?.questionCount || 0}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Summary & Highlight Content */}\n            <div className=\"space-y-2\">\n              <div className=\"text-xs font-medium text-foreground\">Summary & Highlights</div>\n              <div className=\"space-y-1 text-xs\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Callout elements:</span>\n                  <span className=\"text-gray-500 font-medium\">Analyzed</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Summary content:</span>\n                  <span className=\"text-gray-500 font-medium\">Detected</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Key highlights:</span>\n                  <span className=\"text-gray-500 font-medium\">Processed</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Enhanced List Analysis */}\n          <div className=\"border-t border-border/30 pt-3\">\n            <div className=\"text-xs font-medium text-foreground mb-2\">Bullet & List Content</div>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 text-xs\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Bullet lists:</span>\n                <span className=\"font-medium\">{aeoResult.listStructure?.unordered || 0}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Numbered:</span>\n                <span className=\"font-medium\">{aeoResult.listStructure?.ordered || 0}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Total items:</span>\n                <span className=\"font-medium\">{aeoResult.listStructure?.total || 0}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Structure score:</span>\n                <span className={`font-medium ${\n                  (aeoResult.listStructure?.total || 0) > 5 ? 'text-green-600' :\n                  (aeoResult.listStructure?.total || 0) > 2 ? 'text-yellow-600' :\n                  'text-red-600'\n                }`}>\n                  {(aeoResult.listStructure?.total || 0) > 5 ? 'Good' :\n                   (aeoResult.listStructure?.total || 0) > 2 ? 'Fair' : 'Poor'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Recommendations */}\n        {(aeoResult.recommendations?.length ?? 0) > 0 && (\n          <div className=\"bg-muted/30 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-foreground mb-3\">AEO Recommendations</h4>\n            <div className=\"space-y-2\">\n              {(aeoResult.recommendations || []).map((rec, index) => (\n                <div key={index} className=\"flex items-start gap-3 p-2 bg-background rounded border-l-4 border-l-blue-400\">\n                  <div className=\"flex items-center gap-2 min-w-0 flex-1\">\n                    <div className={`w-2 h-2 rounded-full flex-shrink-0 ${\n                      rec.priority === 'high' ? 'bg-red-400' :\n                      rec.priority === 'medium' ? 'bg-yellow-400' : 'bg-blue-400'\n                    }`} />\n                    <div className=\"min-w-0 flex-1\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-medium text-sm text-foreground\">{rec.title}</span>\n                        <ScopeBadge scope={getScope(rec.scope)} />\n                      </div>\n                      <p className=\"text-xs text-muted-foreground mt-1\">{rec.description}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import { Brain, Search, FileText, Globe, Shield } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { getScoreStatus } from '@/lib/utils';\nimport type { AuditResult } from '@/types/audit';\n\ninterface AIAnalysisSectionProps {\n  results: AuditResult;\n}\n\n// Helper function to analyze title length\nconst getTitleLengthAnalysis = (length: number): string => {\n  if (length === 0) return '(⚠️ Missing title)';\n  if (length < 30) return '(⚠️ Too short - expand for better context)';\n  if (length <= 60) return '(✅ Good length for most searches)';\n  if (length <= 70) return '(⚡ Acceptable - may truncate on mobile)';\n  return '(⚠️ Too long - will be truncated in search results)';\n};\n\n// Helper function to analyze heading hierarchy\nconst getHeadingAnalysis = (h1Count: number): string => {\n  if (h1Count === 0) return '(🚨 Missing H1 - add main page heading)';\n  if (h1Count === 1) return '(✅ Perfect hierarchy)';\n  if (h1Count <= 3) return '(⚠️ Multiple H1s - merge or restructure)';\n  return '(🚨 Too many H1s - serious hierarchy issues)';\n};\n\nexport function AIAnalysisSection({ results }: AIAnalysisSectionProps) {\n  // Calculate AI readiness score based on multiple factors\n  const calculateAIReadiness = () => {\n    let score = 0;\n    let maxScore = 0;\n\n    // Schema markup (40 points)\n    if (results.tests.schema) {\n      maxScore += 40;\n      score += Math.min(results.tests.schema.score * 0.4, 40);\n    }\n\n    // SEO structure (30 points)\n    if (results.tests.seo) {\n      maxScore += 30;\n      if (results.tests.seo.title && results.tests.seo.description) score += 15;\n      if (results.tests.seo.h1Count === 1) score += 10;\n      if (results.tests.seo.h2Count > 0) score += 5;\n    }\n\n    // Technical files (20 points)\n    if (results.tests.files) {\n      maxScore += 20;\n      if (results.tests.files.robots.exists) score += 10;\n      if (results.tests.files.sitemap.exists) score += 10;\n    }\n\n    // Accessibility (10 points)\n    if (results.tests.accessibility) {\n      maxScore += 10;\n      if (results.tests.accessibility.hasLang) score += 5;\n      if (results.tests.accessibility.imagesWithoutAlt === 0) score += 5;\n    }\n\n    return maxScore > 0 ? Math.round((score / maxScore) * 100) : 0;\n  };\n\n  const aiReadinessScore = calculateAIReadiness();\n  const aiStatus = getScoreStatus(aiReadinessScore);\n\n  const aiFactors = [\n    {\n      title: 'Structured Data',\n      icon: FileText,\n      score: results.tests.schema?.score || 0,\n      description: 'JSON-LD and microdata for AI comprehension',\n      helpLink: 'https://developers.google.com/search/docs/appearance/structured-data/intro',\n      findings: results.tests.schema ? [\n        `${results.tests.schema.totalSchemas} schema types detected`,\n        `${results.tests.schema.jsonLdCount} JSON-LD scripts found`,\n        results.tests.schema.types?.length > 0 ? `Types: ${results.tests.schema.types.join(', ')}` : 'No structured data found',\n        results.tests.schema.businessType ? `Business type: ${results.tests.schema.businessType.type} (${Math.round((Number(results.tests.schema.businessType.confidence) || 0) * 100)}% confidence)` : '',\n        results.tests.schema.aiReadinessScore ? `AI readiness: ${results.tests.schema.aiReadinessScore}/100 for detected business type` : '',\n        results.tests.schema.contentValidation?.matchPercentage ? `Content match: ${results.tests.schema.contentValidation.matchPercentage}% schema-to-content accuracy` : ''\n      ].filter(Boolean) : ['Schema analysis unavailable']\n    },\n    {\n      title: 'Content Structure',\n      icon: Search,\n      score: results.tests.seo ? Math.min(100, (results.tests.seo.h1Count === 1 ? 50 : 0) + (results.tests.seo.h2Count * 5)) : 0,\n      description: 'Hierarchical content organization for AI parsing',\n      helpLink: 'https://developers.google.com/search/docs/appearance/title-link',\n      findings: results.tests.seo ? [\n        `${results.tests.seo.h1Count} H1 heading${results.tests.seo.h1Count !== 1 ? 's' : ''} ${getHeadingAnalysis(results.tests.seo.h1Count)}`,\n        `${results.tests.seo.h2Count} H2 headings for section structure`,\n        `Title: ${results.tests.seo.title?.length || 0} characters ${getTitleLengthAnalysis(results.tests.seo.title?.length || 0)}`\n      ] : ['Content analysis unavailable']\n    },\n    {\n      title: 'Site-wide Files',\n      icon: Globe,\n      score: results.tests.files ? \n        (results.tests.files.robots.exists ? 40 : 0) + \n        (results.tests.files.sitemap.exists ? 40 : 0) + \n        (results.tests.files.llms?.exists ? 20 : 0) : 0,\n      description: 'Site-level technical files for AI crawler guidance',\n      helpLink: 'https://developers.google.com/search/docs/crawling-indexing/robots/intro',\n      findings: results.tests.files ? [\n        `robots.txt: ${results.tests.files.robots.exists ? '✓ Present' : '✗ Missing'} (site-wide)`,\n        `sitemap.xml: ${results.tests.files.sitemap.exists ? '✓ Present' : '✗ Missing'} (site-wide)`,\n        `llms.txt: ${results.tests.files.llms?.exists ? '✓ Present' : '✗ Missing (site-wide, optional)'}`\n      ] : ['File analysis unavailable']\n    }\n    // Enhanced content patterns analysis will be shown in AEO section\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overall AI Readiness Score */}\n      <Card className=\"border-primary/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <Brain className=\"w-6 h-6 text-primary\" />\n            AI Readiness Assessment\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Evaluation of content structure and technical implementation for AI search optimization\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"space-y-1\">\n              <div className=\"score-display\">{aiReadinessScore}</div>\n              <div className=\"text-sm text-muted-foreground\">\n                AI Optimization Index\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className={`text-sm font-medium px-3 py-1 rounded-full ${\n                aiStatus === 'excellent' ? 'bg-emerald-100 text-emerald-700' :\n                aiStatus === 'good' ? 'bg-green-100 text-green-700' :\n                aiStatus === 'warning' ? 'bg-amber-100 text-amber-700' :\n                'bg-red-100 text-red-700'\n              }`}>\n                {aiStatus.toUpperCase()}\n              </div>\n            </div>\n          </div>\n          <Progress value={aiReadinessScore} status={aiStatus} className=\"h-3 mb-3\" />\n          <div className=\"paper-meta\">\n            <p className=\"text-sm font-medium mb-1\">Scoring Methodology</p>\n            <p className=\"text-xs text-muted-foreground mb-2\">\n              AI optimization formula: <strong>Schema markup</strong> 40% (machine understanding) + \n              <strong>Content structure</strong> 30% (H1/meta tags) + <strong>Technical files</strong> 20% (robots/sitemap) + \n              <strong>Accessibility</strong> 10% (language/images). Based on modern AI search requirements.\n            </p>\n            <div className=\"flex items-center gap-2 text-xs\">\n              <span className=\"font-medium text-amber-700\">⚠️ Static Analysis Only</span>\n              <span className=\"text-muted-foreground\">\n                JavaScript-rendered content not analyzed\n              </span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Detailed AI Factors */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {aiFactors.map((factor) => {\n          const Icon = factor.icon;\n          const status = getScoreStatus(factor.score);\n          \n          return (\n            <Card key={factor.title} className=\"metric-card\">\n              <CardHeader className=\"pb-4\">\n                <CardTitle className=\"flex items-center justify-between text-base\">\n                  <div className=\"flex items-center gap-2\">\n                    <Icon className=\"w-4 h-4 text-primary\" />\n                    {factor.title}\n                  </div>\n                  {factor.helpLink && (\n                    <a \n                      href={factor.helpLink} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"text-xs text-primary hover:text-primary/80 transition-colors\"\n                      title=\"View Google documentation\"\n                    >\n                      📖 Guide\n                    </a>\n                  )}\n                </CardTitle>\n                <p className=\"text-xs text-muted-foreground leading-relaxed\">\n                  {factor.description}\n                  {factor.helpLink && (\n                    <a \n                      href={factor.helpLink} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\" \n                      className=\"ml-2 text-primary hover:underline\"\n                    >\n                      Learn more →\n                    </a>\n                  )}\n                </p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"font-mono text-2xl font-bold text-primary\">{factor.score}</div>\n                    <div className={`text-xs font-medium px-2 py-1 rounded ${\n                      status === 'excellent' ? 'bg-emerald-100 text-emerald-700' :\n                      status === 'good' ? 'bg-green-100 text-green-700' :\n                      status === 'warning' ? 'bg-amber-100 text-amber-700' :\n                      'bg-red-100 text-red-700'\n                    }`}>\n                      {status}\n                    </div>\n                  </div>\n                  \n                  <Progress value={factor.score} status={status} className=\"h-1.5\" />\n                  \n                  <div className=\"space-y-1\">\n                    {factor.findings.map((finding, idx) => (\n                      <div key={idx} className=\"text-xs text-muted-foreground font-mono\">\n                        {finding}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* AI Analysis Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-lg border-b border-border pb-3 mb-0\">\n            <Shield className=\"w-5 h-5\" />\n            AI Optimization Recommendations\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-4\">\n          <div className=\"prose prose-sm max-w-none\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h4 className=\"font-semibold text-sm text-foreground mb-2\">Priority Actions</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  {aiReadinessScore < 70 && results.tests.schema?.totalSchemas === 0 && (\n                    <li>• Implement JSON-LD structured data for content type detection</li>\n                  )}\n                  {results.tests.schema?.businessType?.type && (results.tests.schema?.aiReadinessScore || 0) < 70 && (\n                    <li>• Enhance {results.tests.schema.businessType.type} schema with missing critical fields</li>\n                  )}\n                  {results.tests.schema?.types && results.tests.schema.types.includes('Organization') && !results.tests.schema.types.includes('logo') && (\n                    <li>• Add logo field to Organization schema for brand recognition</li>\n                  )}\n                  {results.tests.schema?.contentValidation?.issues && results.tests.schema.contentValidation.issues.length > 0 && (\n                    <li>• Fix schema-content mismatches: {results.tests.schema.contentValidation.issues[0]}</li>\n                  )}\n                  {results.tests.schema?.contentValidation?.matchPercentage && results.tests.schema.contentValidation.matchPercentage < 70 && (\n                    <li>• Review structured data accuracy - only {results.tests.schema.contentValidation.matchPercentage}% content match</li>\n                  )}\n                  {results.tests.seo?.h1Count === 0 && (\n                    <li>• Add H1 heading for main content structure</li>\n                  )}\n                  {!results.tests.files?.robots?.exists && (\n                    <li>• Create robots.txt file at site root to guide AI crawler behavior</li>\n                  )}\n                  {!results.tests.files?.sitemap?.exists && (\n                    <li>• Generate XML sitemap at site root for comprehensive content indexing</li>\n                  )}\n                  {(results.tests.accessibility?.imagesWithoutAlt || 0) > 0 && (\n                    <li>• Add descriptive alt text to {results.tests.accessibility?.imagesWithoutAlt || 0} images</li>\n                  )}\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-sm text-foreground mb-2\">AI-Era Technical Implementation</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>• <a href=\"https://schema.org/Organization\" target=\"_blank\" className=\"text-primary hover:underline\">Schema.org markup</a> for enhanced entity recognition</li>\n                  {results.tests.schema?.businessType?.type === 'FAQ' && (\n                    <li>• <a href=\"https://developers.google.com/search/docs/appearance/structured-data/faqpage\" target=\"_blank\" className=\"text-primary hover:underline\">FAQ Schema</a> for direct answer extraction in AI search</li>\n                  )}\n                  {results.tests.schema?.businessType?.type === 'HowTo' && (\n                    <li>• <a href=\"https://developers.google.com/search/docs/appearance/structured-data/how-to\" target=\"_blank\" className=\"text-primary hover:underline\">HowTo Schema</a> for step-by-step content recognition</li>\n                  )}\n                  {results.tests.schema?.businessType?.type === 'NewsArticle' && (\n                    <li>• <a href=\"https://developers.google.com/search/docs/appearance/structured-data/article\" target=\"_blank\" className=\"text-primary hover:underline\">Article Schema</a> with authorship and E-A-T signals</li>\n                  )}\n                  <li>• Semantic HTML5 elements for content context</li>\n                  <li>• Clear information architecture with logical navigation</li>\n                  <li>• Comprehensive meta descriptions for AI summarization</li>\n                  <li>• <strong>llms.txt</strong>: Experimental file to control AI training data usage <a href=\"https://llmstxt.org\" target=\"_blank\" className=\"text-primary hover:underline text-xs\">(Learn more)</a></li>\n                </ul>\n                \n                <div className=\"mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                  <h5 className=\"text-xs font-semibold text-blue-800 mb-1\">🤖 About llms.txt</h5>\n                  <p className=\"text-xs text-blue-700\">\n                    An emerging standard to control how AI systems access your content. \n                    Similar to robots.txt but for AI training. Still experimental - use if you want \n                    granular control over AI data usage.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","import type { AuditResult, AuditOptions } from '@/types/audit';\n\nclass APIError extends Error {\n  constructor(message: string, public status: number) {\n    super(message);\n    this.name = 'APIError';\n  }\n}\n\nexport class AuditService {\n  private baseURL: string;\n  private cache = new Map<string, { data: AuditResult; timestamp: number }>();\n  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\n  constructor() {\n    // Environment-based URL configuration (no more hardcoded URLs!)\n    this.baseURL = import.meta.env.VITE_BACKEND_URL || \n      (import.meta.env.MODE === 'development' \n        ? 'http://localhost:3001'\n        : 'https://seo-audit-service-458683085682.us-central1.run.app'\n      );\n    \n    console.log('🔗 Backend URL:', this.baseURL);\n  }\n\n  /**\n   * Perform audit - preserves your existing API call logic\n   */\n  async performAudit(url: string, options: AuditOptions = {}): Promise<AuditResult> {\n    const cacheKey = `audit_${url}_${JSON.stringify(options)}`;\n    \n    // Check cache first\n    const cached = this.cache.get(cacheKey);\n    if (cached && Date.now() - cached.timestamp < this.CACHE_DURATION) {\n      return cached.data;\n    }\n\n    try {\n      // Add timeout based on mode - improved timeouts for dynamic sites\n      const controller = new AbortController();\n      const timeoutMs = options.fastMode ? 35000 : options.fullAnalysis ? 180000 : 90000; // 35s fast, 180s browserless, 90s normal\n      const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n      \n      // Use POST request as expected by the deployed backend\n      const response = await fetch(`${this.baseURL}/api/audit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          url, \n          options: {\n            ...options,\n            skipLighthouse: options.fastMode, // Map fastMode to skipLighthouse\n            enableJS: options.fullAnalysis, // Map fullAnalysis to enableJS (browserless.io)\n          }\n        }),\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`,\n          response.status\n        );\n      }\n\n      const result: AuditResult = await response.json();\n      \n      // Cache the result\n      this.cache.set(cacheKey, { data: result, timestamp: Date.now() });\n      \n      return result;\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      \n      if (error instanceof Error && error.name === 'AbortError') {\n        const timeoutSeconds = options.fastMode ? 35 : 60;\n        throw new APIError(`Audit timed out after ${timeoutSeconds} seconds. The site may be JavaScript-heavy or slow to respond. Try a different page or check if the site blocks crawlers.`, 408);\n      }\n      \n      // Handle network errors\n      throw new APIError(\n        error instanceof Error ? error.message : 'Network error occurred',\n        0\n      );\n    }\n  }\n\n  /**\n   * Enhanced audit with heavy dependencies - preserve your lazy loading logic\n   */\n  async performEnhancedAudit(url: string, options: AuditOptions = {}): Promise<AuditResult> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/audit/enhanced`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, options }),\n      });\n\n      if (!response.ok) {\n        // Fallback to lightweight audit if enhanced fails\n        console.warn('Enhanced audit failed, falling back to lightweight mode');\n        return this.performAudit(url, options);\n      }\n\n      return await response.json();\n    } catch (error) {\n      // Graceful fallback - preserve your error handling approach\n      console.warn('Enhanced audit error, falling back to lightweight mode:', error);\n      return this.performAudit(url, options);\n    }\n  }\n\n  /**\n   * Sitemap discovery - find URLs in sitemap\n   */\n  async discoverSitemapUrls(url: string, maxUrls = 20): Promise<{\n    success: boolean;\n    baseUrl: string;\n    sitemaps: Array<{ url: string; status: string; type?: string }>;\n    discoveredUrls: number;\n    urls: string[];\n    maxUrls: number;\n    executionTime: number;\n    timestamp: string;\n    nextStep: string;\n  }> {\n    try {\n      // Add timeout controller for sitemap discovery\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n      \n      const response = await fetch(`${this.baseURL}/api/sitemap-audit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, maxUrls, mode: 'discover' }),\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.error || `Sitemap discovery failed: ${response.statusText}`,\n          response.status\n        );\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      if (error instanceof Error && error.name === 'AbortError') {\n        throw new APIError('Sitemap discovery timed out (30 seconds). The site may have a large or complex sitemap.', 408);\n      }\n      throw new APIError('Failed to discover sitemap URLs', 0);\n    }\n  }\n\n  /**\n   * Batch audit - audit multiple URLs from sitemap\n   */\n  async performBatchAudit(url: string, maxUrls = 20): Promise<{\n    success: boolean;\n    baseUrl: string;\n    sitemaps: Array<{ url: string; status: string; type?: string }>;\n    totalUrls: number;\n    maxUrls: number;\n    results: Array<{\n      url: string;\n      success: boolean;\n      executionTime: number;\n      scores?: {\n        seo: number;\n        performance: number;\n        accessibility: number;\n        overall: number;\n      };\n      keyFindings?: string[];\n      error?: string;\n    }>;\n    summary: {\n      completed: number;\n      failed: number;\n      avgScore: number;\n      totalExecutionTime: number;\n    };\n    timestamp: string;\n    executionTime: number;\n  }> {\n    try {\n      // Add longer timeout for batch processing (multiple URLs)\n      const controller = new AbortController();\n      const timeoutMs = Math.max(60000, maxUrls * 3000); // At least 60s, or 3s per URL\n      const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n      \n      const response = await fetch(`${this.baseURL}/api/sitemap-audit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url, maxUrls, mode: 'batch' }),\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.error || `Batch audit failed: ${response.statusText}`,\n          response.status\n        );\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      if (error instanceof Error && error.name === 'AbortError') {\n        const timeoutSeconds = Math.max(60, maxUrls * 3);\n        throw new APIError(`Batch audit timed out after ${timeoutSeconds} seconds. Try reducing the number of URLs or the site may have complex pages that take longer to analyze.`, 408);\n      }\n      throw new APIError('Failed to perform batch audit', 0);\n    }\n  }\n\n  /**\n   * Clear cache - preserve your cache management\n   */\n  async clearCache(): Promise<void> {\n    try {\n      // Clear local cache\n      this.cache.clear();\n      \n      // Clear server cache\n      const response = await fetch(`${this.baseURL}/api/cache/clear`, {\n        method: 'POST',\n      });\n\n      if (!response.ok) {\n        throw new APIError('Failed to clear server cache', response.status);\n      }\n    } catch (error) {\n      console.warn('Cache clear warning:', error);\n      // Don't throw - cache clearing shouldn't break the app\n    }\n  }\n\n  /**\n   * Generate LLMS.txt - preserve your existing logic\n   */\n  async generateLLMSTxt(url: string): Promise<{\n    content: string;\n    url: string;\n    instructions: string;\n  }> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/llms/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url }),\n      });\n\n      if (!response.ok) {\n        throw new APIError('LLMS.txt generation failed', response.status);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      throw new APIError('Failed to generate LLMS.txt', 0);\n    }\n  }\n\n  /**\n   * Check server health - preserve your health check logic\n   */\n  async checkHealth(): Promise<{\n    status: string;\n    timestamp: string;\n    uptime: number;\n    mode: string;\n    memory: {\n      used: string;\n      total: string;\n    };\n  }> {\n    try {\n      const response = await fetch(`${this.baseURL}/api/health`);\n      \n      if (!response.ok) {\n        throw new APIError('Health check failed', response.status);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error instanceof APIError) {\n        throw error;\n      }\n      throw new APIError('Unable to reach server', 0);\n    }\n  }\n\n  /**\n   * Get cache size for debugging\n   */\n  getCacheSize(): number {\n    return this.cache.size;\n  }\n\n  /**\n   * Get current backend URL for debugging\n   */\n  getBackendURL(): string {\n    return this.baseURL;\n  }\n}\n\n// Export singleton instance\nexport const auditService = new AuditService();","import { useState } from 'react';\nimport { Search, Loader2, AlertCircle, CheckCircle2, MapPin, BarChart3, Globe, Clock } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { auditService } from '@/services/auditService';\nimport { isValidURL } from '@/lib/utils';\n\ninterface BatchAuditSectionProps {\n  onBatchComplete?: (results: any) => void;\n}\n\nexport function BatchAuditSection({ onBatchComplete }: BatchAuditSectionProps) {\n  const [url, setUrl] = useState('');\n  const [maxUrls, setMaxUrls] = useState(20);\n  const [isDiscovering, setIsDiscovering] = useState(false);\n  const [isBatchRunning, setIsBatchRunning] = useState(false);\n  const [discoveryResults, setDiscoveryResults] = useState<any>(null);\n  const [batchResults, setBatchResults] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [urlError, setUrlError] = useState<string | null>(null);\n\n  // URL validation\n  const isUrlValid = url && isValidURL(url) && !urlError;\n\n  const handleUrlChange = (value: string) => {\n    setUrl(value);\n    if (value && !isValidURL(value)) {\n      setUrlError('Please enter a valid URL (e.g., https://example.com)');\n    } else {\n      setUrlError(null);\n    }\n  };\n\n  const handleDiscoverSitemap = async () => {\n    if (!isUrlValid || isDiscovering) return;\n\n    setIsDiscovering(true);\n    setError(null);\n    setDiscoveryResults(null);\n    setBatchResults(null);\n\n    try {\n      const results = await auditService.discoverSitemapUrls(url, maxUrls);\n      setDiscoveryResults(results);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to discover sitemap URLs';\n      setError(errorMessage);\n    } finally {\n      setIsDiscovering(false);\n    }\n  };\n\n  const handleBatchAudit = async () => {\n    if (!isUrlValid || isBatchRunning) return;\n\n    setIsBatchRunning(true);\n    setError(null);\n    setBatchResults(null);\n\n    try {\n      const results = await auditService.performBatchAudit(url, maxUrls);\n      setBatchResults(results);\n      onBatchComplete?.(results);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Batch audit failed';\n      setError(errorMessage);\n    } finally {\n      setIsBatchRunning(false);\n    }\n  };\n\n  const getScoreColor = (score: number) => {\n    if (score >= 90) return 'text-emerald-600';\n    if (score >= 70) return 'text-green-600';\n    if (score >= 50) return 'text-amber-600';\n    return 'text-red-600';\n  };\n\n  const getScoreStatus = (score: number) => {\n    if (score >= 90) return 'excellent';\n    if (score >= 70) return 'good';\n    if (score >= 50) return 'warning';\n    return 'poor';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Batch Audit Input */}\n      <Card className=\"border-primary/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <MapPin className=\"w-6 h-6 text-primary\" />\n            Sitemap-Based Batch Analysis\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Discover and audit multiple pages from your website's sitemap for comprehensive analysis\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* URL Input */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"md:col-span-2 space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">\n                Website URL\n              </label>\n              <Input\n                type=\"url\"\n                placeholder=\"https://example.com\"\n                value={url}\n                onChange={(e) => handleUrlChange(e.target.value)}\n                className={urlError ? 'border-destructive' : ''}\n              />\n              {urlError && (\n                <p className=\"text-sm text-destructive flex items-center gap-1\">\n                  <AlertCircle className=\"w-4 h-4\" />\n                  {urlError}\n                </p>\n              )}\n            </div>\n\n            <div className=\"space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">\n                Max Pages (1-50)\n              </label>\n              <Input\n                type=\"number\"\n                min=\"1\"\n                max=\"50\"\n                value={maxUrls}\n                onChange={(e) => setMaxUrls(Math.min(50, Math.max(1, parseInt(e.target.value) || 20)))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex flex-col sm:flex-row gap-3\">\n            <Button\n              onClick={handleDiscoverSitemap}\n              disabled={!isUrlValid || isDiscovering}\n              variant=\"outline\"\n              className=\"flex-1\"\n            >\n              {isDiscovering ? (\n                <>\n                  <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Discovering...\n                </>\n              ) : (\n                <>\n                  <Search className=\"w-4 h-4 mr-2\" />\n                  Discover Sitemap URLs\n                </>\n              )}\n            </Button>\n\n            <Button\n              onClick={handleBatchAudit}\n              disabled={!isUrlValid || isBatchRunning}\n              size=\"academic\"\n              className=\"flex-1\"\n            >\n              {isBatchRunning ? (\n                <>\n                  <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Running Batch Analysis...\n                </>\n              ) : (\n                <>\n                  <BarChart3 className=\"w-4 h-4 mr-2\" />\n                  Start Batch Audit\n                </>\n              )}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Error Display */}\n      {error && (\n        <Card className=\"border-destructive/20 bg-destructive/5\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2 text-destructive\">\n              <AlertCircle className=\"w-5 h-5\" />\n              <div>\n                <h3 className=\"font-semibold\">Batch Analysis Failed</h3>\n                <p className=\"text-sm mt-1\">{error}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Discovery Results */}\n      {discoveryResults && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg\">\n              <Globe className=\"w-5 h-5\" />\n              Sitemap Discovery Results\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{discoveryResults.discoveredUrls}</div>\n                <div className=\"metric-label\">URLs Discovered</div>\n              </div>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{discoveryResults.sitemaps.filter((s: any) => s.status === 'found').length}</div>\n                <div className=\"metric-label\">Sitemaps Found</div>\n              </div>\n              <div className=\"metric-display\">\n                <div className=\"metric-value\">{discoveryResults.executionTime}ms</div>\n                <div className=\"metric-label\">Discovery Time</div>\n              </div>\n            </div>\n\n            {/* Sitemap Status */}\n            <div className=\"space-y-2\">\n              <h4 className=\"font-semibold text-sm\">Discovered Sitemaps</h4>\n              {discoveryResults.sitemaps.map((sitemap: any, index: number) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-muted/50 rounded\">\n                  <span className=\"font-mono text-sm\">{sitemap.url}</span>\n                  <div className=\"flex items-center gap-2\">\n                    {sitemap.status === 'found' ? (\n                      <>\n                        <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />\n                        <span className=\"text-xs bg-emerald-100 text-emerald-700 px-2 py-1 rounded\">\n                          {sitemap.type || 'found'}\n                        </span>\n                      </>\n                    ) : (\n                      <>\n                        <AlertCircle className=\"w-4 h-4 text-red-400\" />\n                        <span className=\"text-xs bg-red-100 text-red-700 px-2 py-1 rounded\">\n                          not found\n                        </span>\n                      </>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {discoveryResults.urls.length > 0 && (\n              <div className=\"mt-6 p-4 bg-primary/5 rounded-lg\">\n                <p className=\"text-sm text-muted-foreground mb-2\">\n                  Ready to audit {discoveryResults.urls.length} pages. Click \"Start Batch Audit\" to analyze all discovered URLs.\n                </p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Batch Results */}\n      {batchResults && (\n        <div className=\"space-y-6\">\n          {/* Summary Card */}\n          <Card className=\"border-primary/30\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-3 text-xl\">\n                <BarChart3 className=\"w-6 h-6 text-primary\" />\n                Batch Audit Summary\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"metric-display\">\n                  <div className=\"metric-value\">{batchResults.summary.completed}</div>\n                  <div className=\"metric-label\">Completed</div>\n                </div>\n                <div className=\"metric-display\">\n                  <div className=\"metric-value\">{batchResults.summary.failed}</div>\n                  <div className=\"metric-label\">Failed</div>\n                </div>\n                <div className=\"metric-display\">\n                  <div className={`metric-value ${getScoreColor(batchResults.summary.avgScore)}`}>\n                    {batchResults.summary.avgScore}\n                  </div>\n                  <div className=\"metric-label\">Avg Score</div>\n                </div>\n                <div className=\"metric-display\">\n                  <div className=\"metric-value\">{Math.round(batchResults.executionTime / 1000)}s</div>\n                  <div className=\"metric-label\">Total Time</div>\n                </div>\n              </div>\n\n              <Progress \n                value={batchResults.summary.avgScore} \n                status={getScoreStatus(batchResults.summary.avgScore)} \n                className=\"h-3 mb-4\" \n              />\n\n              <div className=\"paper-meta\">\n                <p className=\"text-sm font-medium mb-1\">Analysis Overview</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Analyzed {batchResults.totalUrls} pages from {batchResults.baseUrl} \n                  with an average optimization score of {batchResults.summary.avgScore}/100\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Individual Results */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-lg\">\n                <Clock className=\"w-5 h-5\" />\n                Individual Page Results\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3 max-h-96 overflow-y-auto academic-scrollbar\">\n                {batchResults.results.map((result: any, index: number) => (\n                  <div key={index} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                    <div className=\"flex-1 mr-4\">\n                      <div className=\"font-mono text-sm text-primary mb-1\">\n                        {result.url.replace(batchResults.baseUrl, '')}\n                      </div>\n                      {result.success ? (\n                        <div className=\"flex items-center gap-3 text-xs\">\n                          <span className={`font-bold ${getScoreColor(result.scores?.overall || 0)}`}>\n                            Score: {result.scores?.overall || 0}\n                          </span>\n                          <span className=\"text-muted-foreground\">\n                            {result.executionTime}ms\n                          </span>\n                          {result.keyFindings && result.keyFindings.length > 0 && (\n                            <span className=\"text-amber-600\">\n                              {result.keyFindings.length} issues\n                            </span>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"text-xs text-destructive\">\n                          Error: {result.error}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"text-right\">\n                      {result.success ? (\n                        <div className=\"flex items-center gap-2\">\n                          <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />\n                          <div className=\"text-xs space-y-1\">\n                            {result.scores && (\n                              <>\n                                <div>SEO: {result.scores.seo}</div>\n                                <div>Perf: {result.scores.performance}</div>\n                                {result.psiMetrics?.performance && (\n                                  <div className={`font-medium ${getScoreColor(result.psiMetrics.performance.score)}`}>\n                                    PSI: {result.psiMetrics.performance.score}\n                                  </div>\n                                )}\n                                <div>A11y: {result.scores.accessibility}</div>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      ) : (\n                        <AlertCircle className=\"w-4 h-4 text-destructive\" />\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Target, TrendingUp, Brain, Lightbulb, AlertTriangle, CheckCircle2, ArrowRight, Zap } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport type { AuditResult } from '@/types/audit';\nimport { getScoreStatus } from '@/lib/utils';\n\ninterface BusinessValueSectionProps {\n  results: AuditResult;\n}\n\nexport function BusinessValueSection({ results }: BusinessValueSectionProps) {\n  const [showImplementationGuide, setShowImplementationGuide] = useState(false);\n\n  // Calculate AI readiness impact on business\n  const calculateBusinessImpact = () => {\n    const issues = [];\n    const opportunities = [];\n    const quickWins = [];\n    \n    // Schema markup analysis for business impact\n    if (!results.tests.schema || results.tests.schema.totalSchemas === 0) {\n      issues.push({\n        type: 'critical',\n        area: 'AI Visibility',\n        issue: 'Limited structured data may reduce AI search engine visibility',\n        impact: 'Missing out on AI-driven traffic and customer discovery',\n        solution: 'Add structured data to help AI understand your business',\n        effort: 'Medium'\n      });\n      quickWins.push({\n        action: 'Implement basic Organization schema',\n        benefit: 'AI tools can identify and describe your business',\n        timeframe: '1-2 hours'\n      });\n    } else if (results.tests.schema?.types?.length && results.tests.schema.types.length < 3) {\n      opportunities.push({\n        area: 'AI Understanding',\n        current: `AI sees ${results.tests.schema?.types?.length || 0} content type(s)`,\n        opportunity: 'Add more schema types to improve AI comprehension',\n        benefit: 'Better representation in AI search results'\n      });\n    }\n\n    // SEO structure for AI parsing\n    if (results.tests.seo) {\n      if (results.tests.seo.h1Count !== 1) {\n        issues.push({\n          type: 'warning',\n          area: 'Content Structure', \n          issue: `${results.tests.seo.h1Count} H1 headings found (should be exactly 1)`,\n          impact: 'AI tools struggle to understand page topic and hierarchy',\n          solution: 'Use one clear H1 that describes the main page topic',\n          effort: 'Easy'\n        });\n        quickWins.push({\n          action: 'Fix heading hierarchy (one H1, logical H2-H6)',\n          benefit: 'AI can better extract and summarize your content',\n          timeframe: '30 minutes'\n        });\n      }\n\n      if (!results.tests.seo?.description || results.tests.seo.description.length < 100) {\n        issues.push({\n          type: 'warning',\n          area: 'AI Summarization',\n          issue: 'Missing or short meta description',\n          impact: 'AI tools lack context for accurate content summarization',\n          solution: 'Write descriptive meta descriptions (120-160 characters)',\n          effort: 'Easy'\n        });\n      }\n    }\n\n    // Technical foundations\n    if (results.tests.files) {\n      if (!results.tests.files.sitemap?.exists) {\n        issues.push({\n          type: 'warning',\n          area: 'AI Crawling',\n          issue: 'No sitemap.xml found',\n          impact: 'AI crawlers may miss important pages on your site',\n          solution: 'Create an XML sitemap listing all important pages',\n          effort: 'Easy'\n        });\n      }\n\n      if (!results.tests.files.robots?.exists) {\n        quickWins.push({\n          action: 'Add robots.txt file',\n          benefit: 'Guide AI crawlers to your most important content',\n          timeframe: '15 minutes'\n        });\n      }\n    }\n\n    // Performance impact on AI indexing\n    if (results.tests.performance && results.tests.performance.responseTime > 3000) {\n      issues.push({\n        type: 'warning',\n        area: 'AI Indexing',\n        issue: `Slow loading time (${results.tests.performance.responseTime}ms)`,\n        impact: 'AI crawlers may timeout or skip slow pages',\n        solution: 'Optimize images, reduce server response time',\n        effort: 'Medium'\n      });\n    }\n\n    return { issues, opportunities, quickWins };\n  };\n\n  const businessImpact = calculateBusinessImpact();\n  const overallScore = calculateOverallAIReadiness();\n\n  function calculateOverallAIReadiness() {\n    let score = 0;\n\n    // Schema data (40% weight)\n    const schemaScore = (results.tests.schema?.totalSchemas || 0) > 0 ? \n      Math.min(40, (results.tests.schema?.totalSchemas || 0) * 15) : 0;\n    score += schemaScore;\n\n    // Content structure (30% weight)  \n    const seoScore = results.tests.seo ? \n      (results.tests.seo.title ? 10 : 0) +\n      (results.tests.seo.description ? 10 : 0) +\n      (results.tests.seo.h1Count === 1 ? 10 : 0) : 0;\n    score += seoScore;\n\n    // Technical foundations (20% weight)\n    const techScore = results.tests.files ?\n      (results.tests.files.sitemap?.exists ? 10 : 0) +\n      (results.tests.files.robots?.exists ? 10 : 0) : 0;\n    score += techScore;\n\n    // Performance (10% weight)\n    const responseTime = results.tests.performance?.responseTime || 5000;\n    const perfScore = responseTime < 2000 ? 10 : responseTime < 4000 ? 5 : 0;\n    score += perfScore;\n\n    return Math.round(score);\n  }\n\n  const getImpactColor = (type: string) => {\n    return type === 'critical' ? 'text-red-600' : 'text-amber-600';\n  };\n\n  const getImpactBg = (type: string) => {\n    return type === 'critical' ? 'bg-red-50 border-red-200' : 'bg-amber-50 border-amber-200';\n  };\n\n  const getImplementationSteps = () => {\n    const steps = [];\n\n    // Only show schema if missing or insufficient\n    if (!results.tests.schema || results.tests.schema.totalSchemas === 0) {\n      steps.push(\n        <div key=\"schema\" className=\"p-4 bg-primary/5 rounded-lg border border-primary/20\">\n          <h4 className=\"font-semibold text-foreground mb-2\">🚨 Priority 1: Add Structured Data</h4>\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\n            <li>• Add Organization schema to your homepage</li>\n            <li>• Include business name, address, phone number, and website</li>\n            <li>• Add appropriate schema for your business type (LocalBusiness, Store, etc.)</li>\n            <li>• Test your structured data with Google's Rich Results Test</li>\n          </ul>\n        </div>\n      );\n    }\n\n    // Only show content issues if they exist\n    const contentIssues = [];\n    if (results.tests.seo?.h1Count !== 1) {\n      contentIssues.push(\"• Fix heading structure (use exactly one H1 per page)\");\n    }\n    if (!results.tests.seo?.description || results.tests.seo.description.length < 100) {\n      contentIssues.push(\"• Write comprehensive meta descriptions (120-160 characters)\");\n    }\n    if (!results.tests.seo?.title || results.tests.seo.title.length < 30) {\n      contentIssues.push(\"• Improve page title length and descriptiveness\");\n    }\n    \n    if (contentIssues.length > 0) {\n      steps.push(\n        <div key=\"content\" className=\"p-4 bg-secondary/50 rounded-lg border border-border\">\n          <h4 className=\"font-semibold text-foreground mb-2\">📝 Content Structure Issues</h4>\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\n            {contentIssues.map((issue, idx) => <li key={idx}>{issue}</li>)}\n          </ul>\n        </div>\n      );\n    }\n\n    // Only show technical issues if they exist\n    const technicalIssues = [];\n    if (!results.tests.files?.sitemap?.exists) {\n      technicalIssues.push(\"• Create and submit an XML sitemap\");\n    }\n    if (!results.tests.files?.robots?.exists) {\n      technicalIssues.push(\"• Add robots.txt file with proper directives\");\n    }\n    if (results.tests.performance && results.tests.performance.responseTime > 3000) {\n      technicalIssues.push(\"• Optimize page loading speeds (currently slow)\");\n    }\n    if ((results.tests.accessibility?.imagesWithoutAlt || 0) > 0) {\n      technicalIssues.push(`• Add alt text to ${results.tests.accessibility?.imagesWithoutAlt} images`);\n    }\n\n    if (technicalIssues.length > 0) {\n      steps.push(\n        <div key=\"technical\" className=\"p-4 bg-amber-50 rounded-lg border border-amber-200\">\n          <h4 className=\"font-semibold text-foreground mb-2\">🔧 Technical Fixes Needed</h4>\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\n            {technicalIssues.map((issue, idx) => <li key={idx}>{issue}</li>)}\n          </ul>\n        </div>\n      );\n    }\n\n    // If everything looks good, show congratulations\n    if (steps.length === 0) {\n      steps.push(\n        <div key=\"success\" className=\"p-4 bg-emerald-50 rounded-lg border border-emerald-200\">\n          <h4 className=\"font-semibold text-foreground mb-2\">🎉 Great Work!</h4>\n          <p className=\"text-sm text-muted-foreground\">\n            Your website is well-optimized for AI search engines. Consider adding llms.txt file for additional AI training preferences (optional).\n          </p>\n        </div>\n      );\n    }\n\n    return steps;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* AI Readiness Score for Business */}\n      <Card className=\"border-primary/30\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <Brain className=\"w-6 h-6 text-primary\" />\n            AI Search Readiness Report\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            How well your website works with AI tools like ChatGPT, Claude, Google AI Overviews, and AI-powered search\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            <div className=\"text-center\">\n              <div className={`text-4xl font-bold mb-2 ${getScoreStatus(overallScore) === 'excellent' ? 'text-emerald-600' :\n                getScoreStatus(overallScore) === 'good' ? 'text-green-600' :\n                getScoreStatus(overallScore) === 'warning' ? 'text-amber-600' : 'text-red-600'}`}>\n                {overallScore}%\n              </div>\n              <div className=\"text-sm text-muted-foreground font-medium\">AI Readiness Score</div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"text-4xl font-bold mb-2 text-primary\">\n                {businessImpact.issues.filter(i => i.type === 'critical').length}\n              </div>\n              <div className=\"text-sm text-muted-foreground font-medium\">Critical Issues</div>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"text-4xl font-bold mb-2 text-emerald-600\">\n                {businessImpact.quickWins.length}\n              </div>\n              <div className=\"text-sm text-muted-foreground font-medium\">Quick Wins</div>\n            </div>\n          </div>\n\n          <div className=\"paper-meta\">\n            <p className=\"text-sm font-medium mb-1\">What This Means for Your Business</p>\n            <p className=\"text-xs text-foreground\">\n              {overallScore >= 80 ? \n                \"Your website is well-optimized for AI search engines. Customers can easily discover your business through AI tools.\" :\n                overallScore >= 60 ?\n                \"Your website has good AI compatibility, but improvements could increase your visibility in AI search results.\" :\n                overallScore >= 40 ?\n                \"Your website needs significant improvements to be discovered by AI search engines and tools.\" :\n                \"Your website may have limited visibility in AI search results due to minimal structured data coverage.\"\n              }\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Critical Issues */}\n      {businessImpact.issues.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <AlertTriangle className=\"w-5 h-5 text-amber-500\" />\n              Issues Affecting Your AI Visibility\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {businessImpact.issues.map((issue, index) => (\n              <div key={index} className={`p-4 rounded-lg border ${getImpactBg(issue.type)}`}>\n                <div className=\"flex items-start gap-3\">\n                  <AlertTriangle className={`w-5 h-5 mt-0.5 ${getImpactColor(issue.type)}`} />\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-semibold text-foreground mb-1\">{issue.area}: {issue.issue}</h4>\n                    <p className=\"text-sm text-muted-foreground mb-2\">{issue.impact}</p>\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"text-sm font-medium text-foreground\">{issue.solution}</p>\n                      <span className={`px-2 py-1 text-xs rounded ${\n                        issue.effort === 'Easy' ? 'bg-green-100 text-green-700' :\n                        issue.effort === 'Medium' ? 'bg-amber-100 text-amber-700' :\n                        'bg-red-100 text-red-700'\n                      }`}>\n                        {issue.effort}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Quick Wins */}\n      {businessImpact.quickWins.length > 0 && (\n        <Card className=\"border-emerald-200 bg-emerald-50/50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <Zap className=\"w-5 h-5 text-emerald-600\" />\n              Quick Wins to Improve AI Visibility\n            </CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              Easy improvements that will help AI tools better understand and promote your business\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {businessImpact.quickWins.map((win, index) => (\n                <div key={index} className=\"flex items-start gap-3 p-3 bg-white rounded-lg border border-emerald-200\">\n                  <CheckCircle2 className=\"w-5 h-5 text-emerald-600 mt-0.5\" />\n                  <div>\n                    <h4 className=\"font-medium text-foreground mb-1\">{win.action}</h4>\n                    <p className=\"text-sm text-muted-foreground mb-2\">{win.benefit}</p>\n                    <span className=\"text-xs bg-emerald-100 text-emerald-700 px-2 py-1 rounded\">\n                      {win.timeframe}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Business Opportunities */}\n      {businessImpact.opportunities.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              Opportunities for Growth\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {businessImpact.opportunities.map((opp, index) => (\n              <div key={index} className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                <Lightbulb className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                <div>\n                  <h4 className=\"font-medium text-foreground\">{opp.area}</h4>\n                  <p className=\"text-sm text-muted-foreground mt-1\">{opp.current}</p>\n                  <p className=\"text-sm font-medium text-foreground mt-1\">{opp.opportunity}</p>\n                  <p className=\"text-xs text-blue-700 mt-1\">{opp.benefit}</p>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Implementation Guide Toggle */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between text-lg text-foreground\">\n            <div className=\"flex items-center gap-2\">\n              <Target className=\"w-5 h-5\" />\n              Implementation Guide\n            </div>\n            <Button \n              variant=\"outline\" \n              size=\"sm\"\n              onClick={() => {\n                console.log('Implementation guide button clicked, current state:', showImplementationGuide);\n                setShowImplementationGuide(!showImplementationGuide);\n              }}\n              className=\"transition-all duration-200 hover:bg-primary/10\"\n            >\n              {showImplementationGuide ? 'Hide Guide' : 'Show Implementation Steps'}\n              <ArrowRight className={`w-4 h-4 ml-2 transition-transform duration-200 ${showImplementationGuide ? 'rotate-90' : ''}`} />\n            </Button>\n          </CardTitle>\n        </CardHeader>\n{showImplementationGuide && (\n          <CardContent className=\"transition-all duration-300 ease-in-out border-t border-border pt-4\">\n            <div className=\"space-y-4 animate-in slide-in-from-top-2 duration-300\">\n              {getImplementationSteps()}\n            </div>\n          </CardContent>\n        )}\n      </Card>\n    </div>\n  );\n}","import { Activity, Clock, Zap, Shield, TrendingUp } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport type { PSIResult } from '@/types/audit';\n\ninterface PSIPerformanceSectionProps {\n  psiData: PSIResult;\n}\n\nexport function PSIPerformanceSection({ psiData }: PSIPerformanceSectionProps) {\n  // Safety check for undefined performance data\n  if (!psiData?.performance) {\n    return (\n      <Card className=\"border-amber-200 bg-amber-50/50\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center text-muted-foreground\">\n            <Activity className=\"w-8 h-8 mx-auto mb-2\" />\n            <p>Performance data not available</p>\n            <p className=\"text-xs mt-1\">PSI analysis may have failed or timed out</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  const getScoreColor = (score: number) => {\n    if (score >= 90) return 'text-emerald-600';\n    if (score >= 70) return 'text-green-600';\n    if (score >= 50) return 'text-amber-600';\n    return 'text-red-600';\n  };\n\n  const getScoreStatus = (score: number): 'excellent' | 'good' | 'warning' | 'poor' => {\n    if (score >= 90) return 'excellent';\n    if (score >= 70) return 'good';\n    if (score >= 50) return 'warning';\n    return 'poor';\n  };\n\n  const getVitalColor = (status: 'good' | 'needs-improvement' | 'poor') => {\n    switch (status) {\n      case 'good': return 'text-emerald-600 bg-emerald-50 border-emerald-200';\n      case 'needs-improvement': return 'text-amber-600 bg-amber-50 border-amber-200';\n      case 'poor': return 'text-red-600 bg-red-50 border-red-200';\n    }\n  };\n\n  const getVitalLabel = (status: 'good' | 'needs-improvement' | 'poor') => {\n    switch (status) {\n      case 'good': return 'Good';\n      case 'needs-improvement': return 'Needs Improvement';\n      case 'poor': return 'Poor';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* PSI Performance Overview */}\n      <Card className=\"border-primary/30\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <Activity className=\"w-6 h-6 text-primary\" />\n            PageSpeed Insights Performance\n            {psiData.cached && (\n              <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full\">\n                Cached\n              </span>\n            )}\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Real-world performance data from Google's PageSpeed Insights API\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n            {/* Performance Score */}\n            <div className=\"text-center space-y-2\">\n              <div className={`text-4xl font-bold ${getScoreColor(psiData.performance?.score || 0)}`}>\n                {psiData.performance?.score || 0}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">Performance Score</div>\n              <Progress \n                value={psiData.performance?.score || 0} \n                status={getScoreStatus(psiData.performance?.score || 0)} \n                className=\"h-2\" \n              />\n            </div>\n\n            {/* SEO Score */}\n            {psiData.seo && (\n              <div className=\"text-center space-y-2\">\n                <div className={`text-4xl font-bold ${getScoreColor(psiData.seo.score)}`}>\n                  {psiData.seo.score}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">SEO Score</div>\n                <Progress \n                  value={psiData.seo.score} \n                  status={getScoreStatus(psiData.seo.score)} \n                  className=\"h-2\" \n                />\n              </div>\n            )}\n\n            {/* Accessibility Score */}\n            {psiData.accessibility && (\n              <div className=\"text-center space-y-2\">\n                <div className={`text-4xl font-bold ${getScoreColor(psiData.accessibility.score)}`}>\n                  {psiData.accessibility.score}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Accessibility Score</div>\n                <Progress \n                  value={psiData.accessibility.score} \n                  status={getScoreStatus(psiData.accessibility.score)} \n                  className=\"h-2\" \n                />\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Core Web Vitals */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <Zap className=\"w-5 h-5\" />\n            Core Web Vitals\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Key metrics that measure real-world user experience\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {/* Largest Contentful Paint */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h4 className=\"font-medium text-sm\">Largest Contentful Paint</h4>\n                  <p className=\"text-xl font-bold\">{psiData.performance.metrics.lcp}</p>\n                </div>\n                <Clock className=\"w-5 h-5 text-muted-foreground\" />\n              </div>\n              <div className={`text-xs px-2 py-1 rounded border ${getVitalColor(psiData.performance.coreWebVitals.lcp)}`}>\n                {getVitalLabel(psiData.performance.coreWebVitals.lcp)}\n              </div>\n            </div>\n\n            {/* First Contentful Paint */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h4 className=\"font-medium text-sm\">First Contentful Paint</h4>\n                  <p className=\"text-xl font-bold\">{psiData.performance.metrics.fcp}</p>\n                </div>\n                <TrendingUp className=\"w-5 h-5 text-muted-foreground\" />\n              </div>\n              <div className={`text-xs px-2 py-1 rounded border ${getVitalColor(psiData.performance.coreWebVitals.fcp)}`}>\n                {getVitalLabel(psiData.performance.coreWebVitals.fcp)}\n              </div>\n            </div>\n\n            {/* Cumulative Layout Shift */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h4 className=\"font-medium text-sm\">Cumulative Layout Shift</h4>\n                  <p className=\"text-xl font-bold\">{psiData.performance.metrics.cls}</p>\n                </div>\n                <Shield className=\"w-5 h-5 text-muted-foreground\" />\n              </div>\n              <div className={`text-xs px-2 py-1 rounded border ${getVitalColor(psiData.performance.coreWebVitals.cls)}`}>\n                {getVitalLabel(psiData.performance.coreWebVitals.cls)}\n              </div>\n            </div>\n\n            {/* First Input Delay */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h4 className=\"font-medium text-sm\">First Input Delay</h4>\n                  <p className=\"text-xl font-bold\">{psiData.performance.metrics.fid}</p>\n                </div>\n                <Activity className=\"w-5 h-5 text-muted-foreground\" />\n              </div>\n              <div className={`text-xs px-2 py-1 rounded border ${getVitalColor(psiData.performance.coreWebVitals.fid)}`}>\n                {getVitalLabel(psiData.performance.coreWebVitals.fid)}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Performance Metrics */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <Clock className=\"w-5 h-5\" />\n            Additional Performance Metrics\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-muted-foreground\">Speed Index</span>\n                <span className=\"font-medium\">{psiData.performance.metrics.speedIndex}</span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-muted-foreground\">Total Blocking Time</span>\n                <span className=\"font-medium\">{psiData.performance.metrics.tbt}</span>\n              </div>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"text-xs text-muted-foreground\">\n                <p>Tested on: {psiData.environment.emulatedDevice || 'Mobile Device'}</p>\n                {psiData.environment.networkThrottling && (\n                  <p>Network throttling: {psiData.environment.networkThrottling}ms latency</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Performance Opportunities */}\n      {psiData.opportunities.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg\">\n              <TrendingUp className=\"w-5 h-5\" />\n              Performance Opportunities\n            </CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              Top optimization opportunities to improve performance\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {psiData.opportunities.slice(0, 5).map((opportunity, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-muted/30 rounded\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-sm\">{opportunity.title}</h4>\n                    <p className=\"text-xs text-muted-foreground mt-1\">{opportunity.description}</p>\n                  </div>\n                  <div className=\"text-right text-xs\">\n                    <span className=\"font-bold text-amber-600\">\n                      {opportunity.impact > 1000 \n                        ? `${Math.round(opportunity.impact / 1000 * 10) / 10}s`\n                        : `${opportunity.impact}ms`\n                      }\n                    </span>\n                    <div className=\"text-muted-foreground\">potential savings</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","import { Shield, User, Award, CheckCircle, AlertTriangle, ExternalLink, BookOpen, Building } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { getScoreStatus } from '@/lib/utils';\nimport type { EATResult } from '@/types/audit';\n\ninterface EATAnalysisSectionProps {\n  eatResult: EATResult;\n}\n\nexport function EATAnalysisSection({ eatResult }: EATAnalysisSectionProps) {\n  const overallStatus = getScoreStatus(eatResult.overallScore);\n  const expertiseStatus = getScoreStatus(eatResult.expertise.score);\n  const authorityStatus = getScoreStatus(eatResult.authoritativeness.score);\n  const trustStatus = getScoreStatus(eatResult.trustworthiness.score);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'excellent': return 'text-emerald-700 bg-emerald-100';\n      case 'good': return 'text-green-700 bg-green-100';\n      case 'warning': return 'text-amber-700 bg-amber-100';\n      default: return 'text-red-700 bg-red-100';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overall E-A-T Score */}\n      <Card className=\"border-primary/20\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <Shield className=\"w-6 h-6 text-primary\" />\n            E-A-T Analysis (Expertise, Authoritativeness, Trust)\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Content authority evaluation for AI search and Google's Quality Rater Guidelines\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"space-y-1\">\n              <div className=\"score-display\">{eatResult.overallScore}</div>\n              <div className=\"text-sm text-muted-foreground\">\n                E-A-T Authority Index\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className={`text-sm font-medium px-3 py-1 rounded-full ${getStatusColor(overallStatus)}`}>\n                {overallStatus.toUpperCase()}\n              </div>\n            </div>\n          </div>\n          <Progress value={eatResult.overallScore} status={overallStatus} className=\"h-3 mb-3\" />\n          \n          <div className=\"paper-meta\">\n            <p className=\"text-sm font-medium mb-1\">E-A-T Scoring Formula</p>\n            <p className=\"text-xs text-muted-foreground\">\n              <strong>Expertise</strong> 40% (author credentials, topic depth) + \n              <strong>Authoritativeness</strong> 35% (citations, institutional backing) + \n              <strong>Trustworthiness</strong> 25% (contact info, transparency, security)\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* E-A-T Breakdown */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        \n        {/* Expertise */}\n        <Card className=\"metric-card\">\n          <CardHeader className=\"pb-4\">\n            <CardTitle className=\"flex items-center justify-between text-base\">\n              <div className=\"flex items-center gap-2\">\n                <User className=\"w-4 h-4 text-primary\" />\n                Expertise\n              </div>\n              <a \n                href=\"https://developers.google.com/search/docs/appearance/good-page-experience#signals\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"text-xs text-primary hover:text-primary/80 transition-colors\"\n                title=\"Learn about expertise signals\"\n              >\n                📖 Guide\n              </a>\n            </CardTitle>\n            <p className=\"text-xs text-muted-foreground leading-relaxed\">\n              Author credentials, professional background, and topic knowledge depth\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"font-mono text-2xl font-bold text-primary\">{eatResult.expertise.score}</div>\n                <div className={`text-xs font-medium px-2 py-1 rounded ${getStatusColor(expertiseStatus)}`}>\n                  {expertiseStatus}\n                </div>\n              </div>\n              \n              <Progress value={eatResult.expertise.score} status={expertiseStatus} className=\"h-1.5\" />\n              \n              <div className=\"space-y-2\">\n                <div className=\"text-xs font-medium text-foreground\">Authors Detected:</div>\n                {eatResult.expertise.authors.length > 0 ? (\n                  eatResult.expertise.authors.map((author, idx) => (\n                    <div key={idx} className=\"text-xs text-muted-foreground font-mono bg-muted/20 p-2 rounded\">\n                      <div className=\"font-medium text-foreground\">{author.name}</div>\n                      <div className=\"text-xs\">Source: {author.source} • Confidence: {Math.round(author.confidence * 100)}%</div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"text-xs text-amber-600\">⚠️ No clear author attribution found</div>\n                )}\n                \n                {eatResult.expertise.credentials.length > 0 && (\n                  <div className=\"mt-2\">\n                    <div className=\"text-xs font-medium text-foreground mb-1\">Credentials Found:</div>\n                    {eatResult.expertise.credentials.map((cred, idx) => (\n                      <div key={idx} className=\"text-xs text-muted-foreground\">\n                        <strong>{cred.author}:</strong> {cred.credentials.join(', ') || 'None detected'}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Authoritativeness */}\n        <Card className=\"metric-card\">\n          <CardHeader className=\"pb-4\">\n            <CardTitle className=\"flex items-center justify-between text-base\">\n              <div className=\"flex items-center gap-2\">\n                <Award className=\"w-4 h-4 text-primary\" />\n                Authoritativeness\n              </div>\n              <a \n                href=\"https://developers.google.com/search/docs/fundamentals/creating-helpful-content\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"text-xs text-primary hover:text-primary/80 transition-colors\"\n                title=\"Learn about authority signals\"\n              >\n                📖 Guide\n              </a>\n            </CardTitle>\n            <p className=\"text-xs text-muted-foreground leading-relaxed\">\n              Citations, institutional backing, and external recognition signals\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"font-mono text-2xl font-bold text-primary\">{eatResult.authoritativeness.score}</div>\n                <div className={`text-xs font-medium px-2 py-1 rounded ${getStatusColor(authorityStatus)}`}>\n                  {authorityStatus}\n                </div>\n              </div>\n              \n              <Progress value={eatResult.authoritativeness.score} status={authorityStatus} className=\"h-1.5\" />\n              \n              <div className=\"space-y-1\">\n                <div className=\"text-xs text-muted-foreground font-mono\">\n                  📚 {eatResult.authoritativeness.citations.length} citations/references\n                </div>\n                <div className=\"text-xs text-muted-foreground font-mono\">\n                  🔗 {eatResult.authoritativeness.externalReferences} authoritative links\n                </div>\n                <div className=\"text-xs text-muted-foreground font-mono\">\n                  👤 {eatResult.authoritativeness.authorLinks} author profile links\n                </div>\n                {eatResult.authoritativeness.institutionalAffiliation && (\n                  <div className=\"text-xs text-emerald-600 font-mono\">\n                    🏛️ Institutional affiliation detected\n                  </div>\n                )}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Trustworthiness */}\n        <Card className=\"metric-card\">\n          <CardHeader className=\"pb-4\">\n            <CardTitle className=\"flex items-center justify-between text-base\">\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"w-4 h-4 text-primary\" />\n                Trustworthiness\n              </div>\n              <a \n                href=\"https://developers.google.com/search/docs/fundamentals/creating-helpful-content#who-created-the-content\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"text-xs text-primary hover:text-primary/80 transition-colors\"\n                title=\"Learn about trust signals\"\n              >\n                📖 Guide\n              </a>\n            </CardTitle>\n            <p className=\"text-xs text-muted-foreground leading-relaxed\">\n              Contact transparency, legal compliance, and security indicators\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"font-mono text-2xl font-bold text-primary\">{eatResult.trustworthiness.score}</div>\n                <div className={`text-xs font-medium px-2 py-1 rounded ${getStatusColor(trustStatus)}`}>\n                  {trustStatus}\n                </div>\n              </div>\n              \n              <Progress value={eatResult.trustworthiness.score} status={trustStatus} className=\"h-1.5\" />\n              \n              <div className=\"space-y-1\">\n                <div className={`text-xs font-mono flex items-center gap-1 ${\n                  eatResult.trustworthiness.hasSecureConnection ? 'text-emerald-600' : 'text-red-600'\n                }`}>\n                  {eatResult.trustworthiness.hasSecureConnection ? '🔒' : '⚠️'} HTTPS Security\n                </div>\n                <div className={`text-xs font-mono flex items-center gap-1 ${\n                  eatResult.trustworthiness.hasContactInfo ? 'text-emerald-600' : 'text-amber-600'\n                }`}>\n                  {eatResult.trustworthiness.hasContactInfo ? '📧' : '⚠️'} Contact Information\n                </div>\n                <div className={`text-xs font-mono flex items-center gap-1 ${\n                  eatResult.trustworthiness.hasPrivacyPolicy ? 'text-emerald-600' : 'text-amber-600'\n                }`}>\n                  {eatResult.trustworthiness.hasPrivacyPolicy ? '📋' : '⚠️'} Privacy Policy\n                </div>\n                <div className={`text-xs font-mono flex items-center gap-1 ${\n                  eatResult.trustworthiness.hasAboutPage ? 'text-emerald-600' : 'text-amber-600'\n                }`}>\n                  {eatResult.trustworthiness.hasAboutPage ? 'ℹ️' : '⚠️'} About Page\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Detailed E-A-T Recommendations */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <Building className=\"w-5 h-5\" />\n            E-A-T Enhancement Recommendations\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            \n            {/* High Priority */}\n            <div>\n              <h4 className=\"font-semibold text-sm text-red-700 mb-2 flex items-center gap-1\">\n                <AlertTriangle className=\"w-4 h-4\" />\n                High Priority\n              </h4>\n              <ul className=\"space-y-2\">\n                {eatResult.recommendations\n                  .filter(rec => rec.priority === 'high')\n                  .map((rec, idx) => (\n                    <li key={idx} className=\"text-sm\">\n                      <div className=\"font-medium text-foreground\">{rec.title}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">{rec.description}</div>\n                      <div className=\"text-xs text-red-600 font-medium mt-1\">Category: {rec.category.toUpperCase()}</div>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n\n            {/* Medium Priority */}\n            <div>\n              <h4 className=\"font-semibold text-sm text-amber-700 mb-2\">Medium Priority</h4>\n              <ul className=\"space-y-2\">\n                {eatResult.recommendations\n                  .filter(rec => rec.priority === 'medium')\n                  .map((rec, idx) => (\n                    <li key={idx} className=\"text-sm\">\n                      <div className=\"font-medium text-foreground\">{rec.title}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">{rec.description}</div>\n                      <div className=\"text-xs text-amber-600 font-medium mt-1\">Category: {rec.category.toUpperCase()}</div>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n\n            {/* Low Priority */}\n            <div>\n              <h4 className=\"font-semibold text-sm text-blue-700 mb-2\">Enhancement Opportunities</h4>\n              <ul className=\"space-y-2\">\n                {eatResult.recommendations\n                  .filter(rec => rec.priority === 'low')\n                  .map((rec, idx) => (\n                    <li key={idx} className=\"text-sm\">\n                      <div className=\"font-medium text-foreground\">{rec.title}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">{rec.description}</div>\n                      <div className=\"text-xs text-blue-600 font-medium mt-1\">Category: {rec.category.toUpperCase()}</div>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n\n          {/* E-A-T Context */}\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n            <h5 className=\"text-sm font-semibold text-blue-800 mb-2 flex items-center gap-2\">\n              <BookOpen className=\"w-4 h-4\" />\n              About E-A-T in AI-Era SEO\n            </h5>\n            <p className=\"text-xs text-blue-700 mb-2\">\n              E-A-T (Expertise, Authoritativeness, Trustworthiness) is Google's framework for evaluating \n              content quality. AI systems increasingly rely on these signals to determine content credibility \n              and ranking worthiness.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 text-xs text-blue-700\">\n              <div>\n                <strong>Expertise:</strong> Author credentials, topic knowledge, professional background\n              </div>\n              <div>\n                <strong>Authority:</strong> Citations, institutional backing, external recognition\n              </div>\n              <div>\n                <strong>Trust:</strong> Contact transparency, security, legal compliance\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Detailed Author Analysis */}\n      {eatResult.expertise.authors.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-lg\">\n              <User className=\"w-5 h-5\" />\n              Author Authority Analysis\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {eatResult.expertise.authors.map((author, idx) => {\n                const authorCredentials = eatResult.expertise.credentials.find(\n                  cred => cred.author === author.name\n                );\n                \n                return (\n                  <div key={idx} className=\"p-4 bg-muted/20 rounded-lg border border-border/50\">\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <div>\n                        <h4 className=\"font-medium text-foreground\">{author.name}</h4>\n                        <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                          <span>Source: {author.source}</span>\n                          <span>•</span>\n                          <span>Confidence: {Math.round(author.confidence * 100)}%</span>\n                          {author.url && (\n                            <>\n                              <span>•</span>\n                              <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-primary hover:underline flex items-center gap-1\">\n                                Profile <ExternalLink className=\"w-3 h-3\" />\n                              </a>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                      {authorCredentials && (\n                        <div className=\"text-right\">\n                          <div className=\"text-sm font-bold text-primary\">{authorCredentials.score}</div>\n                          <div className=\"text-xs text-muted-foreground\">Authority Score</div>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {authorCredentials?.credentials && authorCredentials.credentials.length > 0 && (\n                      <div className=\"mb-2\">\n                        <div className=\"text-xs font-medium text-foreground mb-1\">Credentials:</div>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {authorCredentials.credentials.map((cred, credIdx) => (\n                            <span key={credIdx} className=\"text-xs bg-emerald-100 text-emerald-700 px-2 py-1 rounded\">\n                              {cred}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {authorCredentials?.bio && (\n                      <div>\n                        <div className=\"text-xs font-medium text-foreground mb-1\">Bio Extract:</div>\n                        <div className=\"text-xs text-muted-foreground italic\">\n                          {authorCredentials.bio.length > 200 \n                            ? authorCredentials.bio.substring(0, 200) + '...'\n                            : authorCredentials.bio\n                          }\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { Circle, Wifi, WifiOff } from 'lucide-react';\nimport { auditService } from '@/services/auditService';\n\nexport function ServerStatus() {\n  const [status, setStatus] = useState<'online' | 'offline' | 'checking'>('checking');\n  const [statusText, setStatusText] = useState('Checking server...');\n\n  useEffect(() => {\n    checkServerStatus();\n    const interval = setInterval(checkServerStatus, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkServerStatus = async () => {\n    try {\n      const health = await auditService.checkHealth();\n      setStatus('online');\n      setStatusText(`Server online (${health.mode} mode)`);\n    } catch (error) {\n      setStatus('offline');\n      const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n      setStatusText(isLocal ? 'Server offline - Start backend' : 'Server temporarily unavailable');\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (status) {\n      case 'online': return 'text-emerald-400';\n      case 'offline': return 'text-red-400';\n      case 'checking': return 'text-amber-400';\n      default: return 'text-gray-400';\n    }\n  };\n\n  const getStatusIcon = () => {\n    switch (status) {\n      case 'online': return <Wifi className=\"w-4 h-4\" />;\n      case 'offline': return <WifiOff className=\"w-4 h-4\" />;\n      case 'checking': return <Circle className=\"w-4 h-4 animate-pulse\" />;\n      default: return <Circle className=\"w-4 h-4\" />;\n    }\n  };\n\n  return (\n    <div className=\"flex items-center gap-2 px-3 py-2 rounded-lg bg-card/50 border border-border/50\">\n      <div className={getStatusColor()}>\n        {getStatusIcon()}\n      </div>\n      <span className=\"text-sm text-muted-foreground\">{statusText}</span>\n    </div>\n  );\n}","import { Progress } from '@/components/ui/progress';\nimport { Clock, CheckCircle2, AlertCircle, Loader2 } from 'lucide-react';\n\ninterface AuditStep {\n  id: string;\n  name: string;\n  description: string;\n  estimatedDuration: number; // in seconds\n  status: 'pending' | 'running' | 'completed' | 'error';\n  actualDuration?: number;\n}\n\ninterface AuditProgressBarProps {\n  currentStep: string;\n  steps: AuditStep[];\n  startTime: number;\n  onCancel?: () => void;\n}\n\nexport function AuditProgressBar({ currentStep, steps, startTime, onCancel }: AuditProgressBarProps) {\n  const currentStepIndex = steps.findIndex(step => step.id === currentStep);\n  const completedSteps = steps.filter(step => step.status === 'completed').length;\n  const totalSteps = steps.length;\n  const progress = (completedSteps / totalSteps) * 100;\n  \n  // Calculate time estimates\n  const elapsedTime = Math.floor((Date.now() - startTime) / 1000);\n  const remainingSteps = steps.slice(currentStepIndex + 1);\n  const remainingTime = remainingSteps.reduce((sum, step) => sum + step.estimatedDuration, 0);\n  const currentStepEstimate = steps[currentStepIndex]?.estimatedDuration || 0;\n  \n  // Format time helper\n  const formatTime = (seconds: number) => {\n    if (seconds < 60) return `${seconds}s`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  const getStepIcon = (status: AuditStep['status']) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />;\n      case 'running':\n        return <Loader2 className=\"w-4 h-4 text-blue-600 animate-spin\" />;\n      case 'error':\n        return <AlertCircle className=\"w-4 h-4 text-red-600\" />;\n      default:\n        return <div className=\"w-4 h-4 rounded-full border-2 border-gray-300\" />;\n    }\n  };\n\n  return (\n    <div className=\"bg-background border border-border rounded-lg p-6 shadow-sm\">\n      {/* Progress Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <Loader2 className=\"w-5 h-5 text-blue-600 animate-spin\" />\n          <div>\n            <h3 className=\"font-semibold text-foreground\">Running AI Analysis</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              Step {currentStepIndex + 1} of {totalSteps}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center gap-1\">\n            <Clock className=\"w-4 h-4\" />\n            <span>{formatTime(elapsedTime)} elapsed</span>\n          </div>\n          {remainingTime > 0 && (\n            <div>~{formatTime(remainingTime)} remaining</div>\n          )}\n        </div>\n      </div>\n\n      {/* Overall Progress Bar */}\n      <div className=\"mb-6\">\n        <Progress value={progress} className=\"h-2 mb-2\" />\n        <div className=\"flex justify-between text-xs text-muted-foreground\">\n          <span>{completedSteps}/{totalSteps} steps completed</span>\n          <span>{Math.round(progress)}%</span>\n        </div>\n      </div>\n\n      {/* Current Step Details */}\n      {steps[currentStepIndex] && (\n        <div className=\"bg-blue-50/50 border border-blue-200 rounded-lg p-4 mb-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <Loader2 className=\"w-4 h-4 text-blue-600 animate-spin\" />\n            <span className=\"font-medium text-blue-900\">\n              {steps[currentStepIndex].name}\n            </span>\n            <span className=\"text-xs text-blue-600\">\n              (~{currentStepEstimate}s)\n            </span>\n          </div>\n          <p className=\"text-sm text-blue-700\">\n            {steps[currentStepIndex].description}\n          </p>\n        </div>\n      )}\n\n      {/* Steps Timeline */}\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium text-foreground mb-3\">Analysis Steps</h4>\n        <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n          {steps.map((step) => (\n            <div\n              key={step.id}\n              className={`flex items-center gap-3 p-2 rounded text-sm ${\n                step.status === 'running' ? 'bg-blue-50' :\n                step.status === 'completed' ? 'bg-emerald-50' :\n                step.status === 'error' ? 'bg-red-50' :\n                'bg-gray-50'\n              }`}\n            >\n              {getStepIcon(step.status)}\n              <div className=\"flex-1\">\n                <div className=\"font-medium\">\n                  {step.name}\n                  {step.actualDuration && (\n                    <span className=\"text-xs text-muted-foreground ml-2\">\n                      ({formatTime(step.actualDuration)})\n                    </span>\n                  )}\n                </div>\n                {step.status === 'running' && (\n                  <div className=\"text-xs text-blue-600\">\n                    {step.description}\n                  </div>\n                )}\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                ~{step.estimatedDuration}s\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Cancel Button */}\n      {onCancel && (\n        <div className=\"mt-4 text-center\">\n          <button\n            onClick={onCancel}\n            className=\"text-sm text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            Cancel Analysis\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Default audit steps configuration\n// Function to get steps with adjusted timings for browserless analysis\nexport const getAuditSteps = (fullAnalysis = false): AuditStep[] => {\n  const baseSteps = DEFAULT_AUDIT_STEPS;\n  if (!fullAnalysis) return baseSteps;\n  \n  // Adjust timings for browserless.io analysis\n  return baseSteps.map(step => {\n    if (step.id === 'ai-optimization') {\n      return {\n        ...step,\n        name: 'Enhanced AI Analysis (browserless.io)',\n        description: 'Running deep JavaScript analysis with browserless.io rendering',\n        estimatedDuration: 90 // Much longer for browserless analysis\n      };\n    }\n    if (step.id === 'fetch') {\n      return { ...step, estimatedDuration: 8 }; // Longer initial fetch for JS sites\n    }\n    return step;\n  });\n};\n\nexport const DEFAULT_AUDIT_STEPS: AuditStep[] = [\n  {\n    id: 'fetch',\n    name: 'Fetching Page',\n    description: 'Downloading HTML content and checking basic connectivity',\n    estimatedDuration: 3,\n    status: 'pending'\n  },\n  {\n    id: 'seo',\n    name: 'SEO Analysis',\n    description: 'Analyzing meta tags, headings, and basic SEO elements',\n    estimatedDuration: 2,\n    status: 'pending'\n  },\n  {\n    id: 'performance',\n    name: 'Performance Check',\n    description: 'Measuring load times and resource efficiency',\n    estimatedDuration: 5,\n    status: 'pending'\n  },\n  {\n    id: 'schema',\n    name: 'Schema Validation',\n    description: 'Extracting and validating structured data markup',\n    estimatedDuration: 4,\n    status: 'pending'\n  },\n  {\n    id: 'accessibility',\n    name: 'Accessibility Analysis',\n    description: 'Running WCAG compliance checks with axe-core',\n    estimatedDuration: 6,\n    status: 'pending'\n  },\n  {\n    id: 'psi',\n    name: 'PageSpeed Insights',\n    description: 'Fetching Core Web Vitals from Google PSI API',\n    estimatedDuration: 8,\n    status: 'pending'\n  },\n  {\n    id: 'ai-optimization',\n    name: 'AI Optimization Analysis',\n    description: 'Running comprehensive 5-category AI readiness analysis',\n    estimatedDuration: 12, // Will be dynamically adjusted for browserless.io\n    status: 'pending'\n  },\n  {\n    id: 'finalize',\n    name: 'Finalizing Report',\n    description: 'Compiling results and generating recommendations',\n    estimatedDuration: 2,\n    status: 'pending'\n  }\n];","import React, { useState, useEffect } from 'react';\nimport { Search, Loader2, AlertCircle, CheckCircle2, Globe, BarChart3 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { AttentionCards } from '@/components/audit/AttentionCards';\nimport { AEOAnalysis } from '@/components/audit/AEOAnalysis';\nimport { AIAnalysisSection } from '@/components/audit/AIAnalysisSection';\nimport { BatchAuditSection } from '@/components/audit/BatchAuditSection';\nimport { BusinessValueSection } from '@/components/audit/BusinessValueSection';\nimport { PSIPerformanceSection } from '@/components/audit/PSIPerformanceSection';\nimport { EATAnalysisSection } from '@/components/audit/EATAnalysisSection';\nimport { ServerStatus } from '@/components/ServerStatus';\nimport { AuditProgressBar, getAuditSteps } from '@/components/AuditProgressBar';\nimport { auditService } from '@/services/auditService';\nimport { isValidURL } from '@/lib/utils';\nimport type { AuditResult, LoadingState } from '@/types/audit';\n\nexport function AuditDashboard() {\n  const [url, setUrl] = useState('');\n  const [results, setResults] = useState<AuditResult | null>(null);\n  const [loadingState, setLoadingState] = useState<LoadingState>('idle');\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'single' | 'batch'>('single');\n  \n  // Progress tracking\n  const [auditSteps, setAuditSteps] = useState(getAuditSteps());\n  const [currentStep, setCurrentStep] = useState('');\n  const [auditStartTime, setAuditStartTime] = useState(0);\n\n  // URL validation\n  const [urlError, setUrlError] = useState<string | null>(null);\n  const [isUrlValid, setIsUrlValid] = useState(false);\n  \n  // Analysis options\n  const [fullAnalysis, setFullAnalysis] = useState(false);\n\n  useEffect(() => {\n    if (!url) {\n      setUrlError(null);\n      setIsUrlValid(false);\n      return;\n    }\n\n    if (!isValidURL(url)) {\n      setUrlError('Please enter a valid URL (e.g., https://example.com)');\n      setIsUrlValid(false);\n      return;\n    }\n\n    setUrlError(null);\n    setIsUrlValid(true);\n  }, [url]);\n\n  const handleAudit = async () => {\n    if (!isUrlValid || loadingState === 'loading') return;\n\n    setLoadingState('loading');\n    setError(null);\n    setResults(null);\n    \n    // Initialize progress tracking with dynamic steps based on analysis type\n    setAuditStartTime(Date.now());\n    const dynamicSteps = getAuditSteps(fullAnalysis);\n    setAuditSteps(dynamicSteps.map(step => ({ ...step, status: 'pending' })));\n    setCurrentStep('fetch');\n\n    // Simulate step progression (since we don't have real-time backend progress)\n    const stepSequence = ['fetch', 'seo', 'performance', 'schema', 'accessibility', 'psi', 'ai-optimization', 'finalize'];\n    let stepIndex = 0;\n\n    const progressInterval = setInterval(() => {\n      if (stepIndex < stepSequence.length - 1) {\n        const currentStepId = stepSequence[stepIndex];\n        const nextStepId = stepSequence[stepIndex + 1];\n        \n        // Mark current step as completed\n        setAuditSteps(prev => prev.map(step => \n          step.id === currentStepId \n            ? { ...step, status: 'completed', actualDuration: Math.floor((Date.now() - auditStartTime) / 1000) }\n            : step\n        ));\n        \n        // Start next step\n        setCurrentStep(nextStepId);\n        setAuditSteps(prev => prev.map(step => \n          step.id === nextStepId \n            ? { ...step, status: 'running' }\n            : step\n        ));\n        \n        stepIndex++;\n      }\n    }, 2000); // Update every 2 seconds\n\n    try {\n      const auditResults = await auditService.performAudit(url, { \n        includePSI: true, // Always include PageSpeed Insights for Core Web Vitals\n        fullAnalysis: fullAnalysis // Enable browserless.io for enhanced analysis\n      });\n      \n      clearInterval(progressInterval);\n      \n      // Mark final step as completed\n      setAuditSteps(prev => prev.map(step => \n        step.id === 'finalize' \n          ? { ...step, status: 'completed', actualDuration: Math.floor((Date.now() - auditStartTime) / 1000) }\n          : step\n      ));\n      \n      setResults(auditResults);\n      setLoadingState('success');\n    } catch (err) {\n      clearInterval(progressInterval);\n      \n      // Mark current step as error\n      setAuditSteps(prev => prev.map(step => \n        step.id === currentStep \n          ? { ...step, status: 'error' }\n          : step\n      ));\n      \n      const errorMessage = err instanceof Error \n        ? err.message \n        : 'An unexpected error occurred during the audit';\n      \n      setError(errorMessage);\n      setLoadingState('error');\n    }\n  };\n\n  const handleClearCache = async () => {\n    try {\n      await auditService.clearCache();\n      // Show success feedback (you could add a toast here)\n      console.log('Cache cleared successfully');\n    } catch (err) {\n      console.warn('Cache clear failed:', err);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && isUrlValid) {\n      handleAudit();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Academic paper-style navigation */}\n      <nav className=\"border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/95\">\n        <div className=\"container mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n                <span className=\"text-primary-foreground font-bold text-sm\">A</span>\n              </div>\n              <span className=\"font-semibold text-lg\">attentionisallyouneed.app</span>\n            </div>\n            <ServerStatus />\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 max-w-7xl\">\n        {/* Academic paper-style header */}\n        <div className=\"text-center mb-12 space-y-4\">\n          <h1 className=\"academic-title\">\n            Attention is all you <span className=\"text-primary\">need.</span>\n          </h1>\n          <p className=\"academic-subtitle max-w-3xl mx-auto\">\n            A no-fuss audit tool — designed for the era of AI-powered search optimization.\n          </p>\n          <p className=\"text-sm text-muted-foreground max-w-2xl mx-auto leading-relaxed\">\n            Because while \"attention is all you need\" revolutionized AI, in search you still need structured data, \n            semantic HTML, and the ability to explain why bounce rate isn't a ranking factor. And if you're \n            curious about the future, experiments like llms.txt may one day help AI make better sense of your site.\n          </p>\n        </div>\n\n        {/* Analysis Mode Selector */}\n        <Card className=\"mb-8 bg-card/50 border-border/50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Search className=\"w-5 h-5\" />\n              Research Analysis Framework\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {/* Tab Selector */}\n            <div className=\"flex gap-4 mb-6 border-b border-border\">\n              <button\n                onClick={() => setActiveTab('single')}\n                className={`pb-3 px-1 border-b-2 transition-colors ${\n                  activeTab === 'single'\n                    ? 'border-primary text-primary font-medium'\n                    : 'border-transparent text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Globe className=\"w-4 h-4\" />\n                  Single Page Analysis\n                </div>\n              </button>\n              <button\n                onClick={() => setActiveTab('batch')}\n                className={`pb-3 px-1 border-b-2 transition-colors ${\n                  activeTab === 'batch'\n                    ? 'border-primary text-primary font-medium'\n                    : 'border-transparent text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <BarChart3 className=\"w-4 h-4\" />\n                  Batch Sitemap Analysis\n                </div>\n              </button>\n            </div>\n\n            {/* Single Page Mode */}\n            {activeTab === 'single' && (\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-muted-foreground\">\n                    Target URL for comprehensive analysis\n                  </label>\n                  <div className=\"flex gap-4\">\n                    <div className=\"flex-1 space-y-1\">\n                      <Input\n                        type=\"url\"\n                        placeholder=\"https://example.com\"\n                        value={url}\n                        onChange={(e) => setUrl(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        className={`${urlError ? 'border-destructive' : ''}`}\n                      />\n                      {urlError && (\n                        <p className=\"text-sm text-destructive flex items-center gap-1\">\n                          <AlertCircle className=\"w-4 h-4\" />\n                          {urlError}\n                        </p>\n                      )}\n                    </div>\n                    \n                    <Button\n                      onClick={handleAudit}\n                      disabled={!isUrlValid || loadingState === 'loading'}\n                      size=\"academic\"\n                      className=\"min-w-[200px]\"\n                    >\n                      {loadingState === 'loading' ? (\n                        <>\n                          <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                          Analyzing...\n                        </>\n                      ) : (\n                        <>\n                          <Search className=\"w-4 h-4 mr-2\" />\n                          Initiate Analysis\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Options & Secondary Actions */}\n                <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between pt-4 border-t border-border/50\">\n                  \n                  {/* Analysis Options */}\n                  <div className=\"flex items-center gap-3\">\n                    <label className=\"flex items-center gap-2 text-sm cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={fullAnalysis}\n                        onChange={(e) => setFullAnalysis(e.target.checked)}\n                        className=\"rounded border-border text-primary focus:ring-primary\"\n                      />\n                      <span className=\"text-muted-foreground\">\n                        Use full analysis \n                        <span className=\"text-xs text-muted-foreground/70 ml-1\">(browserless.io rendering)</span>\n                      </span>\n                    </label>\n                  </div>\n\n                  {/* Secondary Actions */}\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={handleClearCache}\n                      className=\"text-xs\"\n                    >\n                      Clear Cache\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Batch Mode */}\n            {activeTab === 'batch' && (\n              <div className=\"space-y-4\">\n                <div className=\"paper-meta\">\n                  <p className=\"text-sm font-medium mb-1\">Batch Analysis Mode</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Automatically discover and analyze multiple pages from your website's sitemap \n                    for comprehensive optimization insights. Default: 20 pages, Maximum: 50 pages.\n                  </p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Batch Audit Section */}\n        {activeTab === 'batch' && (\n          <BatchAuditSection\n            onBatchComplete={(batchResults) => {\n              console.log('Batch audit completed:', batchResults);\n              // Could show summary or navigate to results\n            }}\n          />\n        )}\n\n        {/* Single Page Results */}\n        {activeTab === 'single' && (\n          <>\n            {/* Enhanced Error Display */}\n            {error && (\n              <Card className=\"mb-8 border-destructive/20 bg-destructive/5\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-start gap-3\">\n                    <AlertCircle className=\"w-5 h-5 text-destructive mt-1\" />\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-semibold text-destructive\">Analysis Failed</h3>\n                      <p className=\"text-sm mt-1 text-foreground\">{error}</p>\n                      \n                      <div className=\"mt-4 p-3 bg-amber-50 rounded-lg border border-amber-200\">\n                        <h4 className=\"text-sm font-medium text-amber-800 mb-2\">💡 Troubleshooting Tips</h4>\n                        <ul className=\"text-xs text-amber-700 space-y-1\">\n                          <li>• <strong>Dynamic/SPA sites</strong>: Our tool analyzes static HTML. JavaScript-heavy sites may show limited results.</li>\n                          <li>• <strong>Timeout issues</strong>: Large or slow sites may exceed analysis limits. The tool will retry automatically with longer timeouts.</li>\n                          <li>• <strong>Access blocked</strong>: Check if robots.txt or firewalls block our crawler.</li>\n                          <li>• <strong>Private sites</strong>: Sites requiring authentication cannot be analyzed.</li>\n                          <li>• <strong>Heavy JavaScript</strong>: Sites that depend heavily on JavaScript rendering may need specialized analysis.</li>\n                        </ul>\n                        \n                        <div className=\"mt-3 pt-3 border-t border-amber-200\">\n                          <p className=\"text-xs text-amber-700\">\n                            <strong>Alternative:</strong> For JavaScript-heavy sites, consider running this analysis on \n                            static snapshots or server-side rendered versions.\n                          </p>\n                          {error.includes('JavaScript-heavy') && (\n                            <div className=\"mt-2 p-2 bg-blue-50 rounded border border-blue-200\">\n                              <p className=\"text-xs text-blue-700\">\n                                <strong>🤖 Dynamic Site Detected:</strong> This site may require JavaScript to display full content. \n                                Our analysis focuses on static HTML and may miss dynamically loaded elements.\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Loading State with Progress */}\n            {loadingState === 'loading' && (\n              <div className=\"mb-8\">\n                <AuditProgressBar\n                  currentStep={currentStep}\n                  steps={auditSteps}\n                  startTime={auditStartTime}\n                  onCancel={() => {\n                    setLoadingState('idle');\n                    setCurrentStep('');\n                  }}\n                />\n              </div>\n            )}\n\n            {/* Results Display */}\n            {results && loadingState === 'success' && (\n              <div className=\"space-y-8\">\n                {/* Target URL Header */}\n                <Card className=\"border-primary/20 bg-primary/5\">\n                  <CardContent className=\"pt-6\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-3 mb-2\">\n                          <Globe className=\"w-5 h-5 text-primary\" />\n                          <span className=\"text-sm font-medium text-foreground\">Analysis Target</span>\n                        </div>\n                        <div className=\"font-mono text-lg text-primary font-medium break-all mb-3\">\n                          {results.url}\n                        </div>\n                        <div className=\"flex items-center gap-4 text-xs text-muted-foreground\">\n                          <span>Analyzed: {new Date(results.timestamp).toLocaleString()}</span>\n                          <span>Mode: {results.mode}</span>\n                          <span>Duration: {results.executionTime}ms</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex gap-2 ml-4\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => {\n                            const exportData = {\n                              ...results,\n                              exportedAt: new Date().toISOString(),\n                              generatedBy: 'AttentionIsAllYouNeed SEO Audit Tool'\n                            };\n                            const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n                            const url = URL.createObjectURL(blob);\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.download = `seo-audit-${new URL(results.url).hostname}-${new Date().toISOString().split('T')[0]}.json`;\n                            document.body.appendChild(link);\n                            link.click();\n                            document.body.removeChild(link);\n                            URL.revokeObjectURL(url);\n                          }}\n                          className=\"text-xs\"\n                        >\n                          📥 Export JSON\n                        </Button>\n                        \n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={async (event) => {\n                            try {\n                              const shareData = `SEO Audit Report for ${results.url}\n                              \nAI Readiness: ${Math.round((results.tests.schema?.score || 0) * 0.4 + (results.tests.seo?.score || 0) * 0.3 + (results.tests.files ? 20 : 0) + (results.tests.accessibility?.score || 0) * 0.1)}%\nGenerated: ${new Date(results.timestamp).toLocaleDateString()}\nAnalysis Tool: AttentionIsAllYouNeed.app`;\n                              \n                              await navigator.clipboard.writeText(shareData);\n                              // Show success feedback briefly\n                              const btn = event.currentTarget as HTMLButtonElement;\n                              const originalText = btn.textContent;\n                              btn.textContent = '✅ Copied!';\n                              setTimeout(() => btn.textContent = originalText, 2000);\n                            } catch (err) {\n                              console.warn('Copy failed:', err);\n                            }\n                          }}\n                          className=\"text-xs\"\n                        >\n                          📋 Share Summary\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Analysis Metadata */}\n                <div className=\"paper-meta flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-emerald-600\" />\n                    Analysis completed successfully\n                  </div>\n                  <div className=\"text-xs font-mono text-muted-foreground\">\n                    Execution: {results.executionTime}ms • Mode: {results.mode} • {new Date(results.timestamp).toLocaleString()}\n                  </div>\n                </div>\n                \n                {/* Core Metrics */}\n                <AttentionCards results={results} />\n                \n                {/* PSI Performance Section */}\n                {results.psiMetrics && (\n                  <div className=\"border-t border-border pt-8\">\n                    <h2 className=\"academic-section-title\">PageSpeed Insights Performance</h2>\n                    <PSIPerformanceSection psiData={results.psiMetrics} />\n                  </div>\n                )}\n                \n                {/* AEO Analysis Section */}\n                {results.tests.aeo && (\n                  <div className=\"border-t border-border pt-8\">\n                    <h2 className=\"academic-section-title\">Answer Engine Optimization (AEO)</h2>\n                    <AEOAnalysis aeoResult={results.tests.aeo} />\n                  </div>\n                )}\n                \n                {/* AI Analysis Section */}\n                <div className=\"border-t border-border pt-8\">\n                  <h2 className=\"academic-section-title\">AI Optimization Analysis</h2>\n                  <AIAnalysisSection results={results} />\n                </div>\n\n                {/* E-A-T Analysis Section */}\n                {results.tests.eat && (\n                  <div className=\"border-t border-border pt-8\">\n                    <h2 className=\"academic-section-title\">Content Authority & Credibility (E-A-T)</h2>\n                    <EATAnalysisSection eatResult={results.tests.eat} />\n                  </div>\n                )}\n\n                {/* Business Value Section */}\n                <div className=\"border-t border-border pt-8\">\n                  <h2 className=\"academic-section-title\">Business Impact & Action Plan</h2>\n                  <BusinessValueSection results={results} />\n                </div>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Academic footer */}\n        <footer className=\"mt-16 pt-8 border-t border-border/50\">\n          <div className=\"text-center text-sm text-muted-foreground\">\n            <p>\n              Comprehensive SEO analysis powered by modern web standards and AI-readiness protocols.\n            </p>\n            <p className=\"mt-2 text-xs\">\n              Built for digital agencies and technical teams who value both rigor and practical results.\n            </p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { AuditDashboard } from './components/AuditDashboard'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <AuditDashboard />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","falsyToString","value","cx","clsx","cva","base","config","props","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","cn","inputs","twMerge","getScoreStatus","score","getScoreColorClass","status","calculateNewCategoryScores","results","ai","_a","_b","machineComprehension","_d","_c","_f","_e","_h","_g","contentStructure","_j","_i","_l","_k","_n","_m","_p","_o","technicalQuality","_r","_q","_t","_s","_v","_u","accessibility","_x","_w","_z","_y","trustGovernance","_B","_A","_D","_C","_F","_E","_H","_G","baseScore","seoScore","_J","_I","performanceScore","_L","_K","accessibilityScore","_N","_M","isValidURL","string","buttonVariants","Button","React.forwardRef","className","size","ref","jsx","Input","type","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createContext3","rootComponentName","defaultContext","BaseContext","React.createContext","index","Provider","scope","children","context","Context","React.useMemo","useContext2","consumerName","React.useContext","createScope","scopeContexts","contexts","composeContextScopes","scopes","baseScope","scopeHooks","createScope2","overrideScopes","nextScopes","nextScopes2","useScope","currentScope","setRef","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","createSlot","ownerName","SlotClone","createSlotClone","Slot2","forwardedRef","slotProps","childrenArray","React.Children","slottable","isSlottable","newElement","newChildren","child","React.isValidElement","React.cloneElement","childrenRef","getElementRef","props2","mergeProps","React.Fragment","SLOTTABLE_IDENTIFIER","childProps","overrideProps","propName","slotPropValue","childPropValue","args","result","element","getter","mayWarn","NODES","Primitive","primitive","Slot","Node","asChild","primitiveProps","Comp","PROGRESS_NAME","DEFAULT_MAX","createProgressContext","createProgressScope","ProgressProvider","useProgressContext","Progress","__scopeProgress","valueProp","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","getInvalidMaxError","max","isValidValueNumber","getInvalidValueError","valueLabel","isNumber","getProgressState","INDICATOR_NAME","ProgressIndicator","indicatorProps","maxValue","propValue","componentName","Root","Indicator","getProgressColor","ProgressPrimitive.Root","ProgressPrimitive.Indicator","AttentionCards","showInfoModal","setShowInfoModal","useState","scores","cards","Brain","BookOpen","Zap","Eye","Users","InfoModal","jsxs","X","TrendingUp","Info","card","CategoryCard","Icon","AEOAnalysis","aeoResult","scoreStatus","scoreColorClass","ScopeBadge","getScope","languageDisplay","count","tag","issue","strength","rec","getTitleLengthAnalysis","length","getHeadingAnalysis","h1Count","AIAnalysisSection","aiReadinessScore","maxScore","aiStatus","aiFactors","FileText","Search","Globe","factor","finding","idx","Shield","APIError","message","AuditService","__publicField","url","options","cacheKey","cached","controller","timeoutMs","timeoutId","response","errorData","error","timeoutSeconds","maxUrls","auditService","BatchAuditSection","onBatchComplete","setUrl","setMaxUrls","isDiscovering","setIsDiscovering","isBatchRunning","setIsBatchRunning","discoveryResults","setDiscoveryResults","batchResults","setBatchResults","setError","urlError","setUrlError","isUrlValid","handleUrlChange","handleDiscoverSitemap","err","errorMessage","handleBatchAudit","getScoreColor","MapPin","AlertCircle","Fragment","Loader2","BarChart3","s","sitemap","CheckCircle2","Clock","BusinessValueSection","showImplementationGuide","setShowImplementationGuide","businessImpact","issues","opportunities","quickWins","overallScore","calculateOverallAIReadiness","schemaScore","techScore","responseTime","perfScore","getImpactColor","getImpactBg","getImplementationSteps","steps","contentIssues","technicalIssues","AlertTriangle","win","opp","Lightbulb","Target","ArrowRight","PSIPerformanceSection","psiData","Activity","getVitalColor","getVitalLabel","opportunity","EATAnalysisSection","eatResult","overallStatus","expertiseStatus","authorityStatus","trustStatus","getStatusColor","User","author","cred","Award","CheckCircle","Building","authorCredentials","ExternalLink","credIdx","ServerStatus","setStatus","statusText","setStatusText","useEffect","checkServerStatus","interval","health","isLocal","getStatusIcon","Wifi","WifiOff","Circle","AuditProgressBar","currentStep","startTime","onCancel","currentStepIndex","step","completedSteps","totalSteps","progress","elapsedTime","remainingTime","sum","currentStepEstimate","formatTime","seconds","minutes","remainingSeconds","getStepIcon","getAuditSteps","fullAnalysis","baseSteps","DEFAULT_AUDIT_STEPS","AuditDashboard","setResults","loadingState","setLoadingState","activeTab","setActiveTab","auditSteps","setAuditSteps","setCurrentStep","auditStartTime","setAuditStartTime","setIsUrlValid","setFullAnalysis","handleAudit","dynamicSteps","stepSequence","stepIndex","progressInterval","currentStepId","nextStepId","prev","auditResults","handleClearCache","handleKeyPress","exportData","blob","link","event","shareData","btn","originalText","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2,3,8,9,10,11,12]}